-- Full Ashlabs GUI (no external lib)
-- Features:
-- Main: Auto Click, Auto Crit, Auto Battle (Start/Stop buttons)
-- Battle: Auto Trial, Auto LostTower (Start/Stop)
-- Event: Auto Claim Event, Auto Spin (Start/Stop)
-- Shop: Auto Buy Medals (loop), Auto Merchant Buy (loop)
-- Misc: Anti AFK, Rejoin, WalkSpeed, JumpPower
-- Left-side tabs, floating icon, hotkey K

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")
local TeleportService = game:GetService("TeleportService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- helper to safely get knit services
local function getKnitServices(timeout)
    timeout = timeout or 2
    local ok, services = pcall(function()
        return ReplicatedStorage:WaitForChild("Packages", timeout):WaitForChild("Knit", timeout):WaitForChild("Services", timeout)
    end)
    if ok then return services end
    return nil
end

local function safeFind(pathParts)
    local obj = ReplicatedStorage
    for _, part in ipairs(pathParts) do
        if not obj then return nil end
        obj = obj:FindFirstChild(part)
    end
    return obj
end

-- create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AshlabsGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = playerGui

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 560, 0, 360)
MainFrame.Position = UDim2.new(0.5, -280, 0.5, -180)
MainFrame.BackgroundColor3 = Color3.fromRGB(25,25,25)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui
local corner = Instance.new("UICorner", MainFrame); corner.CornerRadius = UDim.new(0,8)

-- Title
local Title = Instance.new("TextLabel", MainFrame)
Title.Size = UDim2.new(1, -80, 0, 30)
Title.Position = UDim2.new(0, 10, 0, 5)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.GothamBold
Title.Text = "Ashlabs Hub"
Title.TextColor3 = Color3.fromRGB(255,255,255)
Title.TextSize = 18
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Close button
local CloseBtn = Instance.new("TextButton", MainFrame)
CloseBtn.Size = UDim2.new(0,28,0,28)
CloseBtn.Position = UDim2.new(1,-36,0,6)
CloseBtn.Text = "X"
CloseBtn.BackgroundColor3 = Color3.fromRGB(200,50,50)
CloseBtn.TextColor3 = Color3.fromRGB(255,255,255)
CloseBtn.Font = Enum.Font.GothamBold
Instance.new("UICorner", CloseBtn)

-- Minimize (collapses content area)
local MinBtn = Instance.new("TextButton", MainFrame)
MinBtn.Size = UDim2.new(0,28,0,28)
MinBtn.Position = UDim2.new(1,-72,0,6)
MinBtn.Text = "â€”"
MinBtn.BackgroundColor3 = Color3.fromRGB(90,90,90)
MinBtn.TextColor3 = Color3.fromRGB(255,255,255)
MinBtn.Font = Enum.Font.GothamBold
Instance.new("UICorner", MinBtn)

-- Floating Icon
local IconButton = Instance.new("ImageButton", ScreenGui)
IconButton.Size = UDim2.new(0,48,0,48)
IconButton.Position = UDim2.new(0, 20, 0.82, 0)
IconButton.BackgroundTransparency = 1
IconButton.Image = "rbxassetid://6035047409" -- sample icon
IconButton.Visible = false

-- Left Tab bar
local TabBar = Instance.new("Frame", MainFrame)
TabBar.Size = UDim2.new(0, 140, 1, -60)
TabBar.Position = UDim2.new(0, 10, 0, 50)
TabBar.BackgroundColor3 = Color3.fromRGB(30,30,30)
local tb_corner = Instance.new("UICorner", TabBar); tb_corner.CornerRadius = UDim.new(0,6)

-- Content area
local Content = Instance.new("Frame", MainFrame)
Content.Size = UDim2.new(1, -170, 1, -60)
Content.Position = UDim2.new(0, 160, 0, 50)
Content.BackgroundColor3 = Color3.fromRGB(18,18,18)
local content_corner = Instance.new("UICorner", Content); content_corner.CornerRadius = UDim.new(0,6)

-- bottom status label
local StatusLbl = Instance.new("TextLabel", MainFrame)
StatusLbl.Size = UDim2.new(1, -20, 0, 24)
StatusLbl.Position = UDim2.new(0,10,1,-30)
StatusLbl.BackgroundTransparency = 1
StatusLbl.Font = Enum.Font.SourceSans
StatusLbl.TextSize = 14
StatusLbl.TextColor3 = Color3.fromRGB(200,200,200)
StatusLbl.Text = "Status: Idle"

-- tabs helper
local Tabs = {}
local function newTab(name)
    local btn = Instance.new("TextButton", TabBar)
    btn.Size = UDim2.new(1,-20,0,34)
    btn.Position = UDim2.new(0,10,0, (#TabBar:GetChildren()-1) * 40)
    btn.BackgroundColor3 = Color3.fromRGB(48,48,48)
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    Instance.new("UICorner", btn)

    local page = Instance.new("ScrollingFrame", Content)
    page.Name = name.."Page"
    page.Size = UDim2.new(1, -10, 1, 0)
    page.Position = UDim2.new(0, 5, 0, 0)
    page.BackgroundTransparency = 1
    page.CanvasSize = UDim2.new(0,0,2,0)
    page.ScrollBarThickness = 6
    page.Visible = false
    local list = Instance.new("UIListLayout", page)
    list.Padding = UDim.new(0,6)
    list.SortOrder = Enum.SortOrder.LayoutOrder

    btn.MouseButton1Click:Connect(function()
        for _, v in pairs(Content:GetChildren()) do
            if v:IsA("ScrollingFrame") then v.Visible = false end
        end
        page.Visible = true
        StatusLbl.Text = "Status: Idle"
    end)

    Tabs[name] = {Button = btn, Page = page}
    return Tabs[name]
end

-- create tabs: Main, Battle, Event, Shop, Misc
local tabMain = newTab("Main")
local tabBattle = newTab("Battle")
local tabEvent = newTab("Event")
local tabShop = newTab("Shop")
local tabMisc = newTab("Misc")

-- default visible: Main
tabMain.Page.Visible = true

-- helper to add start/stop button (single button toggles loop)
local function addStartStopButton(parent, label, loopFn)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 360, 0, 34)
    button.BackgroundColor3 = Color3.fromRGB(70,70,70)
    button.TextColor3 = Color3.fromRGB(255,255,255)
    button.Font = Enum.Font.SourceSansSemibold
    button.TextSize = 14
    button.Text = "Start "..label
    button.Parent = parent.Page
    Instance.new("UICorner", button)

    local running = false
    local runner = nil

    button.MouseButton1Click:Connect(function()
        running = not running
        if running then
            button.Text = "Stop "..label
            StatusLbl.Text = "Status: Running "..label
            runner = task.spawn(function()
                local ok, err = pcall(loopFn)
                if not ok then
                    warn("Error in "..label.." loop:", err)
                end
                running = false
                button.Text = "Start "..label
                StatusLbl.Text = "Status: Idle"
            end)
        else
            -- flip flag so loopFn should stop by checking a closure field
            -- we expect loopFn to check `shouldContinue()` closure.
            -- if it doesn't, we still try to cancel runner by setting running=false and letting the function exit.
            StatusLbl.Text = "Status: Stopping "..label
        end
    end)

    -- return an accessor for the current state so loop functions can check
    return {
        isRunning = function() return running end,
        setStopped = function() running = false; button.Text = "Start "..label; StatusLbl.Text = "Status: Idle" end
    }
end

-- helper to add one-shot button
local function addButton(parent, text, callback)
    local b = Instance.new("TextButton")
    b.Size = UDim2.new(0, 360, 0, 34)
    b.BackgroundColor3 = Color3.fromRGB(85,85,85)
    b.TextColor3 = Color3.fromRGB(255,255,255)
    b.Font = Enum.Font.SourceSansSemibold
    b.TextSize = 14
    b.Text = text
    b.Parent = parent.Page
    Instance.new("UICorner", b)
    b.MouseButton1Click:Connect(function()
        StatusLbl.Text = "Status: Running "..text
        local ok, err = pcall(callback)
        if not ok then warn("Error running "..text, err) end
        StatusLbl.Text = "Status: Idle"
    end)
end

-- ====================
-- FILL MAIN TAB
-- ====================
-- Auto Click (Start/Stop)
do
    local widget = tabMain
    local controller
    controller = addStartStopButton(widget, "Auto Click", function()
        -- loop function should check controller.isRunning()
        while controller.isRunning() do
            local ok, services = pcall(getKnitServices)
            local onClick
            if ok and services and services:FindFirstChild("ToolService") then
                local tool = services:FindFirstChild("ToolService")
                local re = tool:FindFirstChild("RE")
                if re then onClick = re:FindFirstChild("onClick") end
            else
                -- fallback: try direct path
                onClick = safeFind({"Packages","Knit","Services","ToolService","RE","onClick"})
            end
            if onClick then
                pcall(function() onClick:FireServer() end)
            else
                warn("Auto Click: remote not found")
            end
            task.wait(0.1)
        end
    end)
end

-- Auto Crit (Start/Stop) - uses ArmWrestleService.RequestCritHit
do
    local widget = tabMain
    local controller
    controller = addStartStopButton(widget, "Auto Crit", function()
        local services = getKnitServices()
        local armRF = services and services:FindFirstChild("ArmWrestleService") and services.ArmWrestleService:FindFirstChild("RF")
            or safeFind({"Packages","Knit","Services","ArmWrestleService","RF"})
        while controller.isRunning() do
            if armRF and armRF:FindFirstChild("RequestCritHit") then
                pcall(function() armRF.RequestCritHit:InvokeServer() end)
            else
                warn("Auto Crit: remote not found")
            end
            task.wait(0.3)
        end
    end)
end

-- Auto Battle (Start/Stop) - RequestClick loop as battling
do
    local widget = tabMain
    local controller
    controller = addStartStopButton(widget, "Auto Battle", function()
        local services = getKnitServices()
        local armRF = services and services:FindFirstChild("ArmWrestleService") and services.ArmWrestleService:FindFirstChild("RF")
            or safeFind({"Packages","Knit","Services","ArmWrestleService","RF"})
        while controller.isRunning() do
            if armRF and armRF:FindFirstChild("RequestClick") then
                pcall(function() armRF.RequestClick:InvokeServer() end)
            else
                warn("Auto Battle: remote not found")
            end
            task.wait(0.08)
        end
    end)
end

-- Redeem Codes one-shot sample (button)
addButton(tabMain, "Redeem Common Codes", function()
    local services = getKnitServices()
    local redeemRemote = services and services:FindFirstChild("CodeRedemptionService") and services.CodeRedemptionService:FindFirstChild("RE") and services.CodeRedemptionService.RE:FindFirstChild("onRedeem")
        or safeFind({"Packages","Knit","Services","CodeRedemptionService","RE","onRedeem"})
    local codes = {"banker","sorryoops","timetravel","world19","bulk","superhero"}
    if redeemRemote then
        for _, c in ipairs(codes) do
            pcall(function() redeemRemote:FireServer(c) end)
            task.wait(0.2)
        end
    else
        warn("Redeem remote not found")
    end
end)

-- ====================
-- FILL BATTLE TAB
-- ====================
-- Auto Trial (Start/Stop) - example uses Trial service if exists
do
    local widget = tabBattle
    local controller
    controller = addStartStopButton(widget, "Auto Trial", function()
        local services = getKnitServices()
        local trialService = services and services:FindFirstChild("LostTowerService") or nil
        while controller.isRunning() do
            if trialService and trialService:FindFirstChild("RF") and trialService.RF:FindFirstChild("RequestEnter") then
                pcall(function() trialService.RF.RequestEnter:InvokeServer() end)
            else
                -- fallback: attempt generic "RequestStartFight" from ArmWrestle
                local arm = services and services:FindFirstChild("ArmWrestleService") and services.ArmWrestleService:FindFirstChild("RF")
                if arm and arm:FindFirstChild("RequestStartFight") and _G.LastEnemy then
                    pcall(function() arm.RequestStartFight:InvokeServer(_G.LastEnemy) end)
                end
            end
            task.wait(1.5)
        end
    end)
end

-- Auto LostTower (Start/Stop) placeholder
do
    local widget = tabBattle
    local controller
    controller = addStartStopButton(widget, "Auto LostTower", function()
        while controller.isRunning() do
            -- placeholder action
            print("Auto LostTower: placeholder action")
            task.wait(2)
        end
    end)
end

-- ====================
-- FILL EVENT TAB
-- ====================
-- Auto Claim Event (Start/Stop)
do
    local widget = tabEvent
    local controller
    controller = addStartStopButton(widget, "Auto Claim Event", function()
        local services = getKnitServices()
        local eventPass = services and services:FindFirstChild("EventPassService") and services.EventPassService:FindFirstChild("RF")
            or safeFind({"Packages","Knit","Services","EventPassService","RF"})
        while controller.isRunning() do
            if eventPass and eventPass:FindFirstChild("ClaimAll") then
                pcall(function() eventPass.ClaimAll:InvokeServer() end)
            end
            task.wait(30)
        end
    end)
end

-- Auto Spin (Start/Stop), loops calls to Spin remote if exists
do
    local widget = tabEvent
    local controller
    controller = addStartStopButton(widget, "Auto Spin", function()
        local services = getKnitServices()
        local spinRemote = services and services:FindFirstChild("SpinService") and services.SpinService:FindFirstChild("RF") and services.SpinService.RF:FindFirstChild("Spin")
            or safeFind({"Packages","Knit","Services","SpinService","RF","Spin"})
        while controller.isRunning() do
            if spinRemote then
                pcall(function() spinRemote:InvokeServer() end)
            else
                warn("Auto Spin: remote not found")
            end
            task.wait(5)
        end
    end)
end

-- ====================
-- FILL SHOP TAB
-- ====================
-- Auto Buy Medals (loop)
do
    local widget = tabShop
    local controller
    controller = addStartStopButton(widget, "Auto Buy Medals", function()
        local services = getKnitServices()
        local buyRemote = services and services:FindFirstChild("MedalMerchantService") and services.MedalMerchantService:FindFirstChild("RF") and services.MedalMerchantService.RF:FindFirstChild("Buy")
            or safeFind({"Packages","Knit","Services","MedalMerchantService","RF","Buy"})
        local medals = {
            "Rune Medal","Firework Medal","Feel Good Medal","Easter Medal","Soulfire Medal","Godly Medal"
        }
        while controller.isRunning() do
            if buyRemote then
                for _, m in ipairs(medals) do
                    if not controller.isRunning() then break end
                    pcall(function() buyRemote:InvokeServer(m) end)
                    task.wait(0.2)
                end
            else
                warn("Buy Medals remote not found")
            end
            task.wait(10)
        end
    end)
end

-- Auto Merchant Buy (loop)
do
    local widget = tabShop
    local controller
    controller = addStartStopButton(widget, "Auto Merchant Buy", function()
        local services = getKnitServices()
        local limited = services and services:FindFirstChild("LimitedMerchantService") and services.LimitedMerchantService:FindFirstChild("RF")
            or safeFind({"Packages","Knit","Services","LimitedMerchantService","RF"})
        while controller.isRunning() do
            if limited and limited:FindFirstChild("BuyItem") then
                pcall(function() limited.BuyItem:InvokeServer("Hidden Merchant", 4) end)
                pcall(function() limited.BuyItem:InvokeServer("Pirate Merchant", 5) end)
            else
                warn("Merchant remote not found")
            end
            task.wait(200)
        end
    end)
end

-- ====================
-- FILL MISC TAB
-- ====================
-- Anti AFK (one-shot enable)
addButton(tabMisc, "Enable Anti AFK", function()
    player.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new(0,0))
    end)
    StatusLbl.Text = "Status: Anti AFK enabled"
end)

-- Rejoin server
addButton(tabMisc, "Rejoin Server", function()
    TeleportService:Teleport(game.PlaceId, player)
end)

-- WalkSpeed & JumpPower quick setters
addButton(tabMisc, "Set WalkSpeed 50", function()
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.WalkSpeed = 50
    end
end)
addButton(tabMisc, "Set WalkSpeed 16 (reset)", function()
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.WalkSpeed = 16
    end
end)
addButton(tabMisc, "Set JumpPower 100", function()
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.JumpPower = 100
    end
end)
addButton(tabMisc, "Set JumpPower 50 (reset)", function()
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.JumpPower = 50
    end
end)

-- ====================
-- Controls: close / icon / minimize / drag icon
-- ====================
-- Minimize behavior: collapse content area (toggle)
local minimized = false
MinBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    Content.Visible = not minimized
    TabBar.Visible = not minimized
    if minimized then
        MainFrame.Size = UDim2.new(0,560,0,72)
    else
        MainFrame.Size = UDim2.new(0,560,0,360)
    end
end)

CloseBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    IconButton.Visible = true
end)

IconButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    IconButton.Visible = false
end)

-- icon draggable
do
    local dragging, dragStart, startPos
    IconButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = IconButton.Position
        end
    end)
    IconButton.InputEnded:Connect(function(input) if input.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            IconButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- hotkey K to toggle
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.K then
        MainFrame.Visible = not MainFrame.Visible
        IconButton.Visible = not MainFrame.Visible
    end
end)

-- done
print("Ashlabs GUI loaded. Tabs: Main, Battle, Event, Shop, Misc.")
