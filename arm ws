local GUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/BloodLetters/Ash-Libs/refs/heads/main/source.lua"))()
GUI:CreateMain({
    Name = "Ashlabs",
    title = "Arm Wrestle Simulator",
    ToggleUI = "K",
    WindowIcon = "home", -- you can use lucid icons
    -- WindowHeight = 600, -- default height
    -- WindowWidth = 800, -- default width
    Theme = {
        Background = Color3.fromRGB(25, 25, 35),
        Secondary = Color3.fromRGB(35, 35, 45),
        Accent = Color3.fromRGB(138, 43, 226),
        Text = Color3.fromRGB(255, 255, 255),
        TextSecondary = Color3.fromRGB(180, 180, 180),
        Border = Color3.fromRGB(50, 50, 60),
        NavBackground = Color3.fromRGB(20, 20, 30)
    },
    Blur = { -- Buggy
        Enable = false, -- transparent option
        value = 0.2
    },
    Config = { -- not implemented yet
        Enabled = false,
    }
})

local main = GUI:CreateTab("Main", "user-round") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Player"
})
GUI:CreateToggle({
    parent = main, 
    text = "Auto Claim", 
    default = true, 
    callback = function(claim)
	if claim then	
	_G.claim1 = true
	while _G.claim1 == true do
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local KnitServices = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services")

-- EventPassService Remotes
local EventPassRF = KnitServices:WaitForChild("EventPassService"):WaitForChild("RF")

-- TimedRewardService Remotes
local TimedRewardRE = KnitServices:WaitForChild("TimedRewardService"):WaitForChild("RE")

-- Reset Event Pass
EventPassRF:WaitForChild("Reset"):InvokeServer()

-- Claim all Free Event Pass rewards (1–12)
for i = 1, 12 do
	EventPassRF:WaitForChild("ClaimReward"):InvokeServer("Free", i)
end

-- Claim selected Timed Rewards
local timedRewards = {"1","2","3","6","8","9","11","12"}

for _, id in ipairs(timedRewards) do
	TimedRewardRE:WaitForChild("onClaim"):FireServer(id)
end
task.wait(120)
end
		else
		_G.claim1 = false
           end
        print("Toggle state:", claim)
    end
})

GUI:CreateToggle({
    parent = main, 
    text = "Auto Roll Aura", 
    default = true, 
    callback = function(Aura)
if Aura then
        _G.loop3 = true
	while _G.loop3 == true do
		task.wait(0.1)
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("AuraService"):WaitForChild("RF"):WaitForChild("Roll"):InvokeServer()
           end
		else
		_G.loop3 = false
           end
		print("Toggle state:", Aura)
    end
})
GUI:CreateToggle({
    parent = main, 
    text = "Auto Insert Goliath", 
    default = false, 
    callback = function(state)
        getgenv().AUTO_INSERT_GOLIATH = state

        if state then
            task.spawn(function()
                local Players = game:GetService("Players")
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local CollectionService = game:GetService("CollectionService")
                local Knit = require(ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit"))
                local player = Players.LocalPlayer

                repeat task.wait() until Knit.GetController and Knit.GetService

                local GoliathController = Knit.GetController("GoliathController")
                local PetService        = Knit.GetService("PetService")
                local GoliathService    = Knit.GetService("PetGoliathService")
                local ItemController    = Knit.GetController("ItemController")
                local PetCraftTypes     = require(ReplicatedStorage:WaitForChild("Enums"):WaitForChild("PetCraftTypes"))

                local BOLTS_COST = 100

                local function hasBolts()
                    return ItemController:GetItemAmount("Bolts") >= BOLTS_COST
                end

                while getgenv().AUTO_INSERT_GOLIATH do
                    pcall(function()
                        if hasBolts() and GoliathController.PetsInMachine then
                            for _, slot in ipairs(CollectionService:GetTagged("GoliathSlot")) do
                                if not slot:GetAttribute("Taken") then
                                    PetService:getOwned(player):andThen(function(pets)
                                        for guid, petData in pairs(pets) do
                                            if petData.CraftType == PetCraftTypes.Huge then
                                                print("[AutoInsert] Placing pet:", petData.Key, "into", slot.Name)
                                                GoliathService.onPurchase:Fire(guid, slot.Name)
                                                return
                                            end
                                        end
                                    end)
                                    break
                                end
                            end
                        end
                    end)
                    task.wait(3)
                end
            end)
        end
    end
})
GUI:CreateToggle({
    parent = main, 
    text = "Auto Claim Goliath", 
    default = false, 
    callback = function(state)
        getgenv().AUTO_CLAIM_GOLIATH = state

        if state then
            task.spawn(function()
                local Players = game:GetService("Players")
                local ReplicatedStorage = game:GetService("ReplicatedStorage")
                local CollectionService = game:GetService("CollectionService")
                local Knit = require(ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit"))
                local player = Players.LocalPlayer

                repeat task.wait() until Knit.GetController and Knit.GetService

                local GoliathController = Knit.GetController("GoliathController")
                local GoliathService    = Knit.GetService("PetGoliathService")

                while getgenv().AUTO_CLAIM_GOLIATH do
                    pcall(function()
                        if GoliathController.PetsInMachine then
                            for _, slot in ipairs(CollectionService:GetTagged("GoliathSlot")) do
                                local slotPet = GoliathController.PetsInMachine[slot.Name]
                                if slotPet then
                                    local guid = slotPet.Guid
                                    local timer = GoliathController.PetMachineTimer[guid]
                                    if timer and timer - require(ReplicatedStorage.Vendor.RealTime)() <= 0 then
                                        print("[AutoClaim] Claiming pet from slot:", slot.Name)
                                        GoliathService.onClaim:Fire(guid, slot.Name)
                                    end
                                end
                            end
                        end
                    end)
                    task.wait(3)
                end
            end)
        end
    end
})


local main = GUI:CreateTab("Machine and Shop", "webhook") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Shop"
})

GUI:CreateToggle({
    parent = main, 
    text = "Squid Merchant", 
    default = true, 
    callback = function(squid)
if squid then
        _G.squid1 = true
	while _G.squid1 == true do
task.wait(200)
local args = {"Hidden Merchant",4}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
local args = {"Hidden Merchant",5}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
local args = {"Frontman Merchant",5}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
local args = {"BrainrotMarket",9}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("UniversalShopService"):WaitForChild("RF"):WaitForChild("Buy"):InvokeServer(unpack(args))
local args = {"Frozen Merchant",4}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
local args = {"Frozen Merchant",5}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))

end
		else
		_G.squid1 = false
           end
        print("Toggle state:", squid)
    end
})
GUI:CreateToggle({
    parent = main, 
    text = "Buy Shop Summer", 
    default = true, 
    callback = function(shopsummer)
if shopsummer then
        _G.shopsummer1 = true
	while _G.shopsummer1 == true do
local args = {"Pirate Merchant",4}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
local args = {"Pirate Merchant",5}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("LimitedMerchantService"):WaitForChild("RF"):WaitForChild("BuyItem"):InvokeServer(unpack(args))
task.wait(60)
 end
		else
		_G.shopsummer1 = false
           end
		 print("Toggle state:", shopsummer)
    end
})
GUI:CreateButton({
    parent = main, 
    text = "Goliath Machine", 
    callback = function()
-- Knit approach: calls the controller methods used in the decompiled code.
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local Knit = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit")
local KnitLib = require(Knit)

-- Wait until Knit has started and the controller exists
task.spawn(function()
    -- try until controller is ready
    local controller
    while not controller do
        if KnitLib.GetController then
            pcall(function()
                controller = KnitLib.GetController("GoliathController")
            end)
        end
        if not controller then
            task.wait(0.2)
        end
    end

    -- Ensure FrameController exists on the controller (set in KnitInit in your decompiled script)
    while not controller.FrameController do
        task.wait(0.1)
    end

    -- FUNCTIONS you can call:
    local function openGoliath()
        controller.FrameController:Open()
        -- show slot page by default
        controller.SelectionEnabled = false
    end

    local function closeGoliath()
        controller.FrameController:Close()
    end

    local function enableSelection(slotName)
        -- opens the selection view for a particular slot (mimics enableSelection usage)
        controller:enableSelection(slotName)
    end

    -- Example usage:
    openGoliath()
    -- wait 0.5 then enable selection for a slot named "1" (adjust to a real slot name)
    task.delay(0.5, function()
        enableSelection("1")
    end)

    -- if you want to close later:
    -- task.delay(3, closeGoliath)
end)

end})
GUI:CreateButton({
    parent = main, 
    text = "Machine Pristine", 
    callback = function()
--// LocalScript inside StarterPlayerScripts (or executor if testing)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Knit = require(ReplicatedStorage.Packages.Knit)

-- Wait for Knit to start up fully
task.wait(3)

-- Get controller
local PristineController = Knit.GetController("PristineController")

-- Force open the machine menu
PristineController:UpdatePetList()
PristineController.FrameController:Open()
PristineController:UpdateDisplay()
end})

GUI:CreateButton({
    parent = main, 
    text = "Medal Shop", 
    callback = function()
--// LocalScript inside StarterPlayerScripts (or executor)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Knit = require(ReplicatedStorage.Packages.Knit)

-- wait for Knit startup
task.wait(3)

-- Get the controller
local MedalMerchantController = Knit.GetController("MedalMerchantController")

-- Force open the Medal Merchant Shop
if MedalMerchantController and MedalMerchantController.FrameController then
    MedalMerchantController.FrameController:Open()
end
end})

GUI:CreateButton({
    parent = main, 
    text = "Forge Machine", 
    callback = function()
-- ⚡ Execution script to open Forge Machine UI
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Knit = require(ReplicatedStorage.Packages.Knit)
local FrameController = require(ReplicatedStorage.Vendor.FrameController)

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")
local GameUI = PlayerGui:WaitForChild("GameUI")

-- Target: Forge UI
local ForgeUI = GameUI.Menus:WaitForChild("Forge")
local ForgeFrame = FrameController.new(ForgeUI)

-- 🔥 Open the Forge UI instantly
ForgeFrame:Open()
print("⚙️ Forge Machine UI opened successfully!")
end})

GUI:CreateButton({
    parent = main, 
    text = "Rift Machine", 
    callback = function()
--⚡ Force open Rift Machine UI
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Knit = require(ReplicatedStorage.Packages.Knit)
local FrameController = require(ReplicatedStorage.Vendor.FrameController)

local player = Players.LocalPlayer
local RiftUI = player:WaitForChild("PlayerGui"):WaitForChild("GameUI"):WaitForChild("Menus"):WaitForChild("RiftMachine")

-- Create FrameController for Rift UI
local RiftFrame = FrameController.new(RiftUI)

-- Function: open Rift Machine
local function openRiftMachine()
    RiftFrame:Open()
    print("⚙️ Rift Machine UI opened!")
end

-- Function: close Rift Machine
local function closeRiftMachine()
    RiftFrame:Close()
    print("❌ Rift Machine UI closed!")
end

-- Example: auto-open on script run
openRiftMachine()
end})

local main = GUI:CreateTab("Battle", "swords") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Support Battle"
})
GUI:CreateButton({
    parent = main,
    text = "Auto Swing",
    callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")

        local onClick = ReplicatedStorage.Packages
            .Knit.Services.ToolService.RE
            .onClick

        -- Toggle system
        local enabled = not _G.AutoSwingEnabled
        _G.AutoSwingEnabled = enabled

        if enabled then
            print("⚡ Auto Swing ON")
            task.spawn(function()
                while _G.AutoSwingEnabled do
                    onClick:FireServer()
                    task.wait() -- tiny delay to avoid freezing
                end
            end)
        else
            print("🛑 Auto Swing OFF")
        end
    end
})

GUI:CreateButton({
    parent = main, 
    text = "Auto  Rebirth and superRebirth", 
    callback = function()
--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Knit = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit")

local ToolService = Knit.Services:WaitForChild("ToolService")
local ZoneService = Knit.Services:WaitForChild("ZoneService")
local ArmWrestleService = Knit.Services:WaitForChild("ArmWrestleService")
local RebirthService = Knit.Services:WaitForChild("RebirthService")
local RE = ToolService:WaitForChild("RE")

--// Config
local bicepsThreshold = 2.7399858925901514e+26
local fightPlan = {
    {1, "Spawn", "Champion", 1},
    {2, "Spawn", "RogueAi", 1},
    {3, "Spawn", "KrakenBoss", 2},
    {4, "Spawn", "MutantKing", 2},
    {5, "Spawn", "Mammoth", 3},
    {6, "Spawn", "Udzal", 3},
    {7, "Spawn", "SpaceDog", 4},
    {8, "Spawn", "UndeadSparta", 4},
    {9, "Spawn", "EvilOverseer", 5},
    {10, "Spawn", "BruteHunter", 16},
    {11, "Spawn", "Glaciator", 20},
    {12, "Spawn", "MrLizard", 25},
}

--// State
local autoFarmEnabled, critSpamEnabled, autoEquipEnabled = false, false, true
local fighting, rebirthing, stopFight, waitingForBiceps = false, false, false, false
local lastEquipAttempt, equipRetryDelay = 0, 2

--// Modern GUI
local gui = Instance.new("ScreenGui", LocalPlayer.PlayerGui)
gui.Name = "DarkModernGUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 240, 0, 220)
frame.Position = UDim2.new(0.35, 0, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.BackgroundTransparency = 1
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

-- Drop shadow
local shadow = Instance.new("ImageLabel", frame)
shadow.Name = "DropShadow"
shadow.BackgroundTransparency = 1
shadow.ZIndex = 0
shadow.Image = "rbxassetid://1316045217"
shadow.ImageColor3 = Color3.fromRGB(0,0,0)
shadow.ImageTransparency = 0.4
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10,10,118,118)
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Position = UDim2.new(0, -15, 0, -15)

-- Title bar
local titleBar = Instance.new("Frame", frame)
titleBar.Size = UDim2.new(1, 0, 0, 28)
titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", titleBar)
title.Size = UDim2.new(1, -50, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "⚡ Auto Rebirth Bot"
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Left

-- Minimize & Close
local minBtn = Instance.new("TextButton", titleBar)
minBtn.Size = UDim2.new(0,20,0,20)
minBtn.Position = UDim2.new(1,-45,0,4)
minBtn.BackgroundTransparency = 1
minBtn.Text = "–"
minBtn.TextColor3 = Color3.fromRGB(200,200,200)
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 16

local closeBtn = Instance.new("TextButton", titleBar)
closeBtn.Size = UDim2.new(0,20,0,20)
closeBtn.Position = UDim2.new(1,-25,0,4)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "×"
closeBtn.TextColor3 = Color3.fromRGB(255,80,80)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16

-- Body
local body = Instance.new("Frame", frame)
body.Size = UDim2.new(1, -10, 1, -35)
body.Position = UDim2.new(0,5,0,30)
body.BackgroundTransparency = 1

-- Hover effect
local function addHover(btn)
    btn.MouseEnter:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.15), {TextColor3 = Color3.fromRGB(255,255,180)}):Play()
    end)
    btn.MouseLeave:Connect(function()
        TweenService:Create(btn, TweenInfo.new(0.15), {TextColor3 = Color3.fromRGB(255,255,255)}):Play()
    end)
end

-- Button factory
local function makeButton(name, y, enabled)
    local btn = Instance.new("TextButton", body)
    btn.Size = UDim2.new(1,-10,0,32)
    btn.Position = UDim2.new(0,5,0,y)
    btn.Text = name..": "..(enabled and "on" or "off")
    btn.BackgroundColor3 = enabled and Color3.fromRGB(50,200,50) or Color3.fromRGB(200,50,50)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    addHover(btn)
    return btn
end

local FarmButton = makeButton("Auto Battle", 5, autoFarmEnabled)
local CritButton = makeButton("Auto Critical", 45, critSpamEnabled)
local EquipButton = makeButton("Auto Equip", 85, autoEquipEnabled)

-- Status label
local StatusLabel = Instance.new("TextLabel", body)
StatusLabel.Size = UDim2.new(1,-10,0,40)
StatusLabel.Position = UDim2.new(0,5,0,135)
StatusLabel.Text = "STATUS: IDLE..."
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.fromRGB(255,255,255)
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextSize = 16
StatusLabel.TextXAlignment = Enum.TextXAlignment.Center
StatusLabel.TextYAlignment = Enum.TextYAlignment.Center

-- Status update function
local function updateStatus(txt)
    StatusLabel.Text = "STATUS: "..string.upper(txt)
end

-- Button logic
FarmButton.MouseButton1Click:Connect(function()
    autoFarmEnabled = not autoFarmEnabled
    FarmButton.Text = "autofarm: "..(autoFarmEnabled and "on" or "off")
    FarmButton.BackgroundColor3 = autoFarmEnabled and Color3.fromRGB(50,200,50) or Color3.fromRGB(200,50,50)
end)

CritButton.MouseButton1Click:Connect(function()
    critSpamEnabled = not critSpamEnabled
    CritButton.Text = "critspam: "..(critSpamEnabled and "on" or "off")
    CritButton.BackgroundColor3 = critSpamEnabled and Color3.fromRGB(50,200,50) or Color3.fromRGB(200,50,50)
end)

EquipButton.MouseButton1Click:Connect(function()
    autoEquipEnabled = not autoEquipEnabled
    EquipButton.Text = "autoequip: "..(autoEquipEnabled and "on" or "off")
    EquipButton.BackgroundColor3 = autoEquipEnabled and Color3.fromRGB(50,200,50) or Color3.fromRGB(200,50,50)
end)

-- Minimize + Close
local minimized = false
minBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        body.Visible = false
        TweenService:Create(frame, TweenInfo.new(0.25), {Size = UDim2.new(0,240,0,28)}):Play()
    else
        TweenService:Create(frame, TweenInfo.new(0.25), {Size = UDim2.new(0,240,0,220)}):Play()
        task.delay(0.25, function() body.Visible = true end)
    end
end)

closeBtn.MouseButton1Click:Connect(function() gui:Destroy() end)

-- Drag highlight
local dragging, dragInput, dragStart, startPos = false
local function setDragHighlight(state)
    TweenService:Create(titleBar, TweenInfo.new(0.2), {
        BackgroundColor3 = state and Color3.fromRGB(50,50,50) or Color3.fromRGB(35,35,35)
    }):Play()
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        setDragHighlight(true)
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
                setDragHighlight(false)
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset+delta.X, startPos.Y.Scale, startPos.Y.Offset+delta.Y)
    end
end)

-- Fade-in
TweenService:Create(frame, TweenInfo.new(0.5), {BackgroundTransparency = 0}):Play()

--// Core Functions
local function getEquipArgs()
    if LocalPlayer:FindFirstChild("Zone") and LocalPlayer.Zone.Value == 1 then
        return {"1","Dumbells","250Kg"}
    end
    return {"21","Dumbells","ThePyramids12"}
end

local function tryEquip()
    local args = getEquipArgs()
    pcall(function() RE.onEquipRequest:FireServer(unpack(args)) end)
end

local function ensureEquipped()
    if not autoEquipEnabled then return end
    local now = tick()
    if now - lastEquipAttempt >= equipRetryDelay then
        lastEquipAttempt = now
        tryEquip()
    end
end

local function teleportAndFight(zoneNumber, spawnName, enemyName, fightCount)
    if stopFight or not autoFarmEnabled then return end
    updateStatus("TELEPORTING Z"..zoneNumber)
    ZoneService.RE.teleport:FireServer(workspace.Zones[tostring(zoneNumber)].Interactables.Teleports.Locations[spawnName])
    task.wait(1)
    ArmWrestleService.RF.SetAuto:InvokeServer(true)
    for i=1,fightCount do
        if stopFight or not autoFarmEnabled then break end
        updateStatus("FIGHTING "..enemyName)
        pcall(function() ArmWrestleService.RF.RequestStartFight:InvokeServer(enemyName) end)
        task.wait(1)
    end
    ArmWrestleService.RF.SetAuto:InvokeServer(false)
end

local function fightAllZones()
    fighting = true
    for _,plan in ipairs(fightPlan) do
        if stopFight or not autoFarmEnabled then break end
        teleportAndFight(plan[1], plan[2], plan[3], plan[4])
    end
    fighting = false
end

local function rebirthCycle()
    rebirthing = true
    stopFight = true
    updateStatus("REBIRTHING...")
    local rebirthRE = RebirthService:WaitForChild("RE")
    rebirthRE:WaitForChild("onRebirthRequest")
    for i=1,100 do rebirthRE.onRebirthRequest:FireServer() end
    rebirthRE.onSuperRebirth:FireServer()
    updateStatus("WAITING BICEPS...")
    waitingForBiceps = true
    stopFight, rebirthing = false, false
end

-- Heartbeat (clicks + crit)
RunService.Heartbeat:Connect(function()
    ensureEquipped()
    if autoFarmEnabled then RE.onClick:FireServer() end
    if critSpamEnabled then
        ArmWrestleService.RF.RequestCritHit:InvokeServer()
        ArmWrestleService.RF.RequestClick:InvokeServer()
    end
end)

-- Main cycle
task.spawn(function()
    while true do
        if autoFarmEnabled and not fighting and not rebirthing then
            if waitingForBiceps then
                if LocalPlayer.leaderstats and LocalPlayer.leaderstats.Biceps and LocalPlayer.leaderstats.Biceps.Value > bicepsThreshold then
                    waitingForBiceps = false
                    fightAllZones()
                    rebirthCycle()
                end
            else
                fightAllZones()
                rebirthCycle()
            end
        end
        if not autoFarmEnabled and not critSpamEnabled then
            updateStatus("IDLE...")
        end
        task.wait(1)
    end
end)

end})
GUI:CreateButton({
    parent = main, 
    text = "Auto Crit Click", 
    default = true, 
    callback = function()
        -- AutoFight GUI + FastClick (LocalScript version)
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local player = Players.LocalPlayer

        -- Knit + ArmWrestle setup
        local Knit = require(ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit"))
        local ArmWrestleService = Knit.GetService("ArmWrestleService")

        local rfFolder = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ArmWrestleService"):WaitForChild("RF")
        local RequestClick = rfFolder:WaitForChild("RequestClick")
        local RequestCritHit = rfFolder:WaitForChild("RequestCritHit")
        local RequestStartFight = rfFolder:FindFirstChild("RequestStartFight")

        local StartFightSignal = ArmWrestleService.StartFightSignal
        local EndFightSignal = ArmWrestleService.EndFightSignal

        -- main flags
        local fighting = false
        local autoEnabled = true  -- START ALWAYS ON
        local minimized = false
        local running = false

        -- spam clicks fast
        local function spammer()
            if running then return end
            running = true
            while fighting and autoEnabled do
                task.wait(0.01)
                pcall(function()
                    RequestClick:InvokeServer()
                    RequestCritHit:InvokeServer()
                end)
            end
            running = false
        end

        -- connect fight signals
        if StartFightSignal and type(StartFightSignal.Connect) == "function" then
            StartFightSignal:Connect(function(opponent)
                print("[AutoFight] Start:", opponent)
                fighting = true
                spammer()
            end)
        end

        if EndFightSignal and type(EndFightSignal.Connect) == "function" then
            EndFightSignal:Connect(function()
                print("[AutoFight] End")
                fighting = false
            end)
        end

        --------------------------------------------------------------------
        -- GUI
        --------------------------------------------------------------------
        local gui = Instance.new("ScreenGui")
        gui.Name = "AutoFightUI"
        gui.ResetOnSpawn = false
        gui.Parent = player:WaitForChild("PlayerGui")

        local frame = Instance.new("Frame", gui)
        frame.Size = UDim2.new(0, 200, 0, 120)
        frame.Position = UDim2.new(0.5, -100, 0.5, -60)
        frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        frame.BorderSizePixel = 0
        frame.Active = true
        frame.Draggable = true
        frame.ClipsDescendants = true
        Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

        -- Title
        local title = Instance.new("TextLabel", frame)
        title.Size = UDim2.new(1, -60, 0, 30)
        title.Position = UDim2.new(0, 10, 0, 0)
        title.BackgroundTransparency = 1
        title.Text = "⚡ Auto Fight"
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.Font = Enum.Font.GothamBold
        title.TextSize = 16
        title.TextXAlignment = Enum.TextXAlignment.Left

        -- Minimize button
        local minimize = Instance.new("TextButton", frame)
        minimize.Size = UDim2.new(0, 25, 0, 25)
        minimize.Position = UDim2.new(1, -55, 0, 2)
        minimize.BackgroundTransparency = 1
        minimize.Text = "-"
        minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
        minimize.Font = Enum.Font.GothamBold
        minimize.TextSize = 18

        -- Close button
        local close = Instance.new("TextButton", frame)
        close.Size = UDim2.new(0, 25, 0, 25)
        close.Position = UDim2.new(1, -30, 0, 2)
        close.BackgroundTransparency = 1
        close.Text = "X"
        close.TextColor3 = Color3.fromRGB(255, 80, 80)
        close.Font = Enum.Font.GothamBold
        close.TextSize = 16

        -- Toggle button
        local toggle = Instance.new("TextButton", frame)
        toggle.Size = UDim2.new(0.8, 0, 0, 35)
        toggle.Position = UDim2.new(0.1, 0, 0.45, 0)
        toggle.BackgroundColor3 = Color3.fromRGB(60, 200, 60)  -- Default ON color
        toggle.Text = "Auto: ON"  -- Start ON
        toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggle.Font = Enum.Font.GothamBold
        toggle.TextSize = 16
        Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 8)

        --------------------------------------------------------------------
        -- GUI functionality
        --------------------------------------------------------------------
        toggle.MouseButton1Click:Connect(function()
            autoEnabled = not autoEnabled
            if autoEnabled then
                toggle.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
                toggle.Text = "Auto: ON"
                if fighting then
                    spammer()
                end
            else
                toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                toggle.Text = "Auto: OFF"
            end
        end)

        minimize.MouseButton1Click:Connect(function()
            minimized = not minimized
            if minimized then
                frame:TweenSize(UDim2.new(0, 200, 0, 35), "Out", "Quad", 0.25, true)
                toggle.Visible = false
            else
                frame:TweenSize(UDim2.new(0, 200, 0, 120), "Out", "Quad", 0.25, true)
                toggle.Visible = true
            end
        end)

        close.MouseButton1Click:Connect(function()
            gui:Destroy()
        end)

        print("✅ Auto Crit Click GUI loaded (Always ON)!")
    end
})

GUI:CreateButton({
    parent = main, 
    text = "Auto Battle Bot", 
    default = true, 
    callback = function()
-- ===== SERVICES & RF =====
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

local Knit = require(ReplicatedStorage.Packages.Knit)
local ArmWrestleService = Knit.GetService("ArmWrestleService")
local ArmWrestleController = Knit.GetController("ArmWrestleController")

local ClickRF = ReplicatedStorage.Packages.Knit.Services.ArmWrestleService.RF.RequestClick
local CritRF = ReplicatedStorage.Packages.Knit.Services.ArmWrestleService.RF.RequestCritHit

-- ===== AUTO FIGHT GUI =====
do
    local AutoFight = false
    local fightLoop
    local npcName = "ToyBananaMonkey"

    local gui = Instance.new("ScreenGui")
    gui.Name = "AutoFightGui"
    gui.Parent = player:WaitForChild("PlayerGui")
    gui.ResetOnSpawn = false

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 160)
    frame.Position = UDim2.new(0.2,0,0.3,0)
    frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    frame.Parent = gui
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0,12)

    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1,0,0,35)
    titleBar.BackgroundColor3 = Color3.fromRGB(45,45,45)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = frame
    Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0,12)

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1,-70,1,0)
    title.Position = UDim2.new(0,10,0,0)
    title.BackgroundTransparency = 1
    title.Text = "⚡ Auto Fight"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.TextColor3 = Color3.fromRGB(255,255,255)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = titleBar

    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0,35,1,0)
    closeBtn.Position = UDim2.new(1,-35,0,0)
    closeBtn.BackgroundColor3 = Color3.fromRGB(180,50,50)
    closeBtn.Text = "X"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
    closeBtn.Parent = titleBar
    Instance.new("UICorner", closeBtn)

    local miniBtn = Instance.new("TextButton")
    miniBtn.Size = UDim2.new(0,35,1,0)
    miniBtn.Position = UDim2.new(1,-70,0,0)
    miniBtn.BackgroundColor3 = Color3.fromRGB(70,120,200)
    miniBtn.Text = "-"
    miniBtn.Font = Enum.Font.GothamBold
    miniBtn.TextSize = 16
    miniBtn.TextColor3 = Color3.fromRGB(255,255,255)
    miniBtn.Parent = titleBar
    Instance.new("UICorner", miniBtn)

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1,-20,1,-45)
    content.Position = UDim2.new(0,10,0,40)
    content.BackgroundTransparency = 1
    content.Parent = frame

    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(1,0,0,35)
    inputBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
    inputBox.PlaceholderText = "Enter NPC name..."
    inputBox.Text = npcName
    inputBox.Font = Enum.Font.Gotham
    inputBox.TextSize = 16
    inputBox.TextColor3 = Color3.fromRGB(255,255,255)
    inputBox.Parent = content
    Instance.new("UICorner", inputBox)

    local fightBtn = Instance.new("TextButton")
    fightBtn.Size = UDim2.new(1,0,0,40)
    fightBtn.Position = UDim2.new(0,0,0,50)
    fightBtn.BackgroundColor3 = Color3.fromRGB(70,0,0)
    fightBtn.Text = "Start AutoFight"
    fightBtn.Font = Enum.Font.GothamBold
    fightBtn.TextSize = 16
    fightBtn.TextColor3 = Color3.fromRGB(255,255,255)
    Instance.new("UICorner", fightBtn)
    fightBtn.Parent = content

    local function StartFightLoop()
        if AutoFight then return end
        AutoFight = true
        fightBtn.Text = "Stop AutoFight"
        fightBtn.BackgroundColor3 = Color3.fromRGB(0,120,0)
        npcName = inputBox.Text ~= "" and inputBox.Text or npcName

        fightLoop = task.spawn(function()
            while AutoFight do
                ArmWrestleController.RequestStartFight(npcName)
                ArmWrestleService:SetAuto(true)
                -- Wait until fight ends (game handles clicks)
                repeat task.wait() until not ArmWrestleController.Fighting or not AutoFight
                ArmWrestleService:SetAuto(false)
            end
        end)
    end

    local function StopFightLoop()
        AutoFight = false
        fightBtn.Text = "Start AutoFight"
        fightBtn.BackgroundColor3 = Color3.fromRGB(70,0,0)
    end

    fightBtn.MouseButton1Click:Connect(function()
        if AutoFight then StopFightLoop() else StartFightLoop() end
    end)

    local minimized = false
    local miniFrame = Instance.new("TextButton")
    miniFrame.Size = UDim2.new(0,180,0,35)
    miniFrame.Position = UDim2.new(0,10,1,-50)
    miniFrame.BackgroundColor3 = Color3.fromRGB(45,45,45)
    miniFrame.Text = "⚡ AutoFight"
    miniFrame.TextColor3 = Color3.fromRGB(255,255,255)
    miniFrame.Font = Enum.Font.GothamBold
    miniFrame.TextSize = 14
    miniFrame.Visible = false
    miniFrame.Active = true
    miniFrame.Draggable = true
    Instance.new("UICorner", miniFrame)
    miniFrame.Parent = gui

    miniBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        frame.Visible = not minimized
        miniFrame.Visible = minimized
    end)

    miniFrame.MouseButton1Click:Connect(function()
        minimized = false
        frame.Visible = true
        miniFrame.Visible = false
    end)

    closeBtn.MouseButton1Click:Connect(function()
        StopFightLoop()
        gui:Destroy()
    end)
end

-- ===== CRIT/HIT GUI =====
do
    local CritSpam, HitSpam = false, false
    local critLoop, hitLoop

    local gui = Instance.new("ScreenGui")
    gui.Name = "CritHitGui"
    gui.Parent = player:WaitForChild("PlayerGui")
    gui.ResetOnSpawn = false

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 260, 0, 140)
    frame.Position = UDim2.new(0.6,0,0.3,0)
    frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    frame.Parent = gui
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0,12)

    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1,0,0,30)
    titleBar.BackgroundColor3 = Color3.fromRGB(45,45,45)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = frame
    Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0,12)

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1,-50,1,0)
    title.Position = UDim2.new(0,10,0,0)
    title.BackgroundTransparency = 1
    title.Text = "💥 Crit & Hit"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.TextColor3 = Color3.fromRGB(255,255,255)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = titleBar

    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0,35,1,0)
    closeBtn.Position = UDim2.new(1,-35,0,0)
    closeBtn.BackgroundColor3 = Color3.fromRGB(180,50,50)
    closeBtn.Text = "X"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
    closeBtn.Parent = titleBar
    Instance.new("UICorner", closeBtn)

    local miniBtn = Instance.new("TextButton")
    miniBtn.Size = UDim2.new(0,35,1,0)
    miniBtn.Position = UDim2.new(1,-70,0,0)
    miniBtn.BackgroundColor3 = Color3.fromRGB(70,120,200)
    miniBtn.Text = "-"
    miniBtn.Font = Enum.Font.GothamBold
    miniBtn.TextSize = 16
    miniBtn.TextColor3 = Color3.fromRGB(255,255,255)
    miniBtn.Parent = titleBar
    Instance.new("UICorner", miniBtn)

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1,-20,1,-30)
    content.Position = UDim2.new(0,10,0,30)
    content.BackgroundTransparency = 1
    content.Parent = frame

    local function createBtn(text, posY)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1,0,0,35)
        btn.Position = UDim2.new(0,0,0,posY)
        btn.BackgroundColor3 = Color3.fromRGB(70,0,0)
        btn.Text = text
        btn.Font = Enum.Font.GothamBold
        btn.TextSize = 16
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        Instance.new("UICorner", btn)
        btn.Parent = content
        return btn
    end

    local critBtn = createBtn("Start Crit Spam", 0)
    local hitBtn = createBtn("Start Hit Spam", 50)

    local function StartCrit()
        if CritSpam then return end
        CritSpam = true
        critBtn.Text = "Stop Crit Spam"
        critBtn.BackgroundColor3 = Color3.fromRGB(0,120,0)
        critLoop = task.spawn(function()
            while CritSpam do
                pcall(function() CritRF:InvokeServer() end)
                task.wait(0.001)
            end
        end)
    end
    local function StopCrit()
        CritSpam = false
        critBtn.Text = "Start Crit Spam"
        critBtn.BackgroundColor3 = Color3.fromRGB(70,0,0)
    end

    local function StartHit()
        if HitSpam then return end
        HitSpam = true
        hitBtn.Text = "Stop Hit Spam"
        hitBtn.BackgroundColor3 = Color3.fromRGB(0,120,0)
        hitLoop = task.spawn(function()
            while HitSpam do
                pcall(function() ClickRF:InvokeServer() end)
                task.wait(0.001)
            end
        end)
    end
    local function StopHit()
        HitSpam = false
        hitBtn.Text = "Start Hit Spam"
        hitBtn.BackgroundColor3 = Color3.fromRGB(70,0,0)
    end

    critBtn.MouseButton1Click:Connect(function()
        if CritSpam then StopCrit() else StartCrit() end
    end)
    hitBtn.MouseButton1Click:Connect(function()
        if HitSpam then StopHit() else StartHit() end
    end)

    local minimized = false
    local miniFrame = Instance.new("TextButton")
    miniFrame.Size = UDim2.new(0,180,0,30)
    miniFrame.Position = UDim2.new(0,10,1,-45)
    miniFrame.BackgroundColor3 = Color3.fromRGB(45,45,45)
    miniFrame.Text = "💥 Crit & Hit"
    miniFrame.TextColor3 = Color3.fromRGB(255,255,255)
    miniFrame.Font = Enum.Font.GothamBold
    miniFrame.TextSize = 14
    miniFrame.Visible = false
    miniFrame.Active = true
    miniFrame.Draggable = true
    Instance.new("UICorner", miniFrame)
    miniFrame.Parent = gui

    miniBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        frame.Visible = not minimized
        miniFrame.Visible = minimized
    end)
    miniFrame.MouseButton1Click:Connect(function()
        minimized = false
        frame.Visible = true
        miniFrame.Visible = false
    end)
    closeBtn.MouseButton1Click:Connect(function()
        StopCrit(); StopHit()
        gui:Destroy()
    end)
end
    end
})

GUI:CreateButton({
    parent = main, 
    text = "Auto Tower Bot", 
    callback = function()
-- ⚡ Auto Tower + Spam Click Modern GUI
-- Features: Draggable, Minimize/Unminimize with Floating Button, X Close, Loop + SpamClick

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- Knit
local Knit = require(ReplicatedStorage.Packages.Knit)
local ArmWrestleController = Knit.GetController("ArmWrestleController")

-- TowerService
local TowerService = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("TowerService")
    :WaitForChild("RF")
    :WaitForChild("EnterTower")

-- State
local AutoTower = false
local towerName = "MiningTower"
local loopTask
local clickSpam
local Minimized = false

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "AutoTowerLoopGui"
gui.Parent = player:WaitForChild("PlayerGui")
gui.ResetOnSpawn = false

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 260, 0, 160)
frame.Position = UDim2.new(0.35, 0, 0.25, 0)
frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
frame.Active = true
frame.Draggable = true
frame.Parent = gui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0,10)

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1,0,0,35)
titleBar.BackgroundColor3 = Color3.fromRGB(45,45,45)
titleBar.Parent = frame
Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0,10)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,-60,1,0)
title.Position = UDim2.new(0,10,0,0)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255,255,255)
title.Text = "⚡ Auto Tower"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Minimize button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0,30,0,30)
minimizeBtn.Position = UDim2.new(1,-60,0,3)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(90,90,90)
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.fromRGB(255,255,255)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 20
minimizeBtn.Parent = titleBar
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(0,6)

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0,30,0,30)
closeBtn.Position = UDim2.new(1,-30,0,3)
closeBtn.BackgroundColor3 = Color3.fromRGB(150,0,0)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.Parent = titleBar
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0,6)

-- Input box
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(1,-20,0,30)
inputBox.Position = UDim2.new(0,10,0,50)
inputBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
inputBox.TextColor3 = Color3.fromRGB(255,255,255)
inputBox.PlaceholderText = "Enter Tower name..."
inputBox.Text = towerName
inputBox.Font = Enum.Font.Gotham
inputBox.TextSize = 16
inputBox.Parent = frame
Instance.new("UICorner", inputBox).CornerRadius = UDim.new(0,6)

-- Start/Stop button
local button = Instance.new("TextButton")
button.Size = UDim2.new(1,-20,0,35)
button.Position = UDim2.new(0,10,0,95)
button.BackgroundColor3 = Color3.fromRGB(80,0,0)
button.TextColor3 = Color3.fromRGB(255,255,255)
button.Text = "Start Loop"
button.Font = Enum.Font.GothamBold
button.TextSize = 18
button.Parent = frame
Instance.new("UICorner", button).CornerRadius = UDim.new(0,8)

-- Floating mini button (⚡)
local miniButton = Instance.new("TextButton")
miniButton.Size = UDim2.new(0,120,0,35)
miniButton.Position = UDim2.new(0,10,1,-50)
miniButton.BackgroundColor3 = Color3.fromRGB(45,45,45)
miniButton.Text = "⚡ Auto Tower"
miniButton.TextColor3 = Color3.fromRGB(255,255,255)
miniButton.Font = Enum.Font.GothamBold
miniButton.TextSize = 14
miniButton.Visible = false
miniButton.Active = true
miniButton.Draggable = true
Instance.new("UICorner", miniButton).CornerRadius = UDim.new(0,8)
miniButton.Parent = gui

-- Functions
local function StartLoop()
    if AutoTower then return end
    AutoTower = true
    button.Text = "Stop Loop"
    button.BackgroundColor3 = Color3.fromRGB(0,120,0)

    towerName = inputBox.Text ~= "" and inputBox.Text or towerName

    loopTask = task.spawn(function()
        while AutoTower do
            TowerService:InvokeServer(towerName, true)

            clickSpam = RunService.Heartbeat:Connect(function()
                ArmWrestleController.MouseClick(Enum.UserInputType.MouseButton1, false)
            end)

            task.wait(15) -- adjust duration
            if clickSpam then
                clickSpam:Disconnect()
                clickSpam = nil
            end
            task.wait(1)
        end
    end)
end

local function StopLoop()
    if not AutoTower then return end
    AutoTower = false
    button.Text = "Start Loop"
    button.BackgroundColor3 = Color3.fromRGB(80,0,0)
    if clickSpam then
        clickSpam:Disconnect()
        clickSpam = nil
    end
end

-- Button toggle
button.MouseButton1Click:Connect(function()
    if AutoTower then StopLoop() else StartLoop() end
end)

-- Close button
closeBtn.MouseButton1Click:Connect(function()
    StopLoop()
    gui:Destroy()
end)

-- Minimize / Unminimize
minimizeBtn.MouseButton1Click:Connect(function()
    Minimized = true
    frame.Visible = false
    miniButton.Visible = true
end)

miniButton.MouseButton1Click:Connect(function()
    Minimized = false
    frame.Visible = true
    miniButton.Visible = false
end)
end})
GUI:CreateButton({
    parent = main, 
    text = "Auto Trial", 
    callback = function()
-- Modern Compact GUI with Loop & Color State
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Knit Service Remote
local RequestJoin = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("ChampionshipService")
    :WaitForChild("RF")
    :WaitForChild("RequestJoin")

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ChampionshipGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 130)
mainFrame.Position = UDim2.new(0.35, 0, 0.35, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 10)

-- Top Bar
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 28)
topBar.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
topBar.BorderSizePixel = 0
topBar.Parent = mainFrame
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 10)

-- Title
local title = Instance.new("TextLabel")
title.Text = "Trial Bot"
title.Font = Enum.Font.GothamBold
title.TextSize = 13
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Size = UDim2.new(1, -60, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = topBar

-- Close Button (X)
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 28, 1, 0)
closeButton.Position = UDim2.new(1, -28, 0, 0)
closeButton.Text = "X"
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 14
closeButton.TextColor3 = Color3.fromRGB(255, 80, 80)
closeButton.BackgroundTransparency = 1
closeButton.Parent = topBar

-- Minimize Button (-)
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 28, 1, 0)
minimizeButton.Position = UDim2.new(1, -56, 0, 0)
minimizeButton.Text = "-"
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 16
minimizeButton.TextColor3 = Color3.fromRGB(200, 200, 200)
minimizeButton.BackgroundTransparency = 1
minimizeButton.Parent = topBar

-- Text Box
local textBox = Instance.new("TextBox")
textBox.PlaceholderText = "Enter name (e.g. Medieval)"
textBox.Font = Enum.Font.Gotham
textBox.TextSize = 13
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
textBox.Size = UDim2.new(1, -40, 0, 32)
textBox.Position = UDim2.new(0, 20, 0, 40)
textBox.ClearTextOnFocus = false
textBox.Parent = mainFrame
Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 8)

-- Start/Stop Button
local joinButton = Instance.new("TextButton")
joinButton.Text = "Start"
joinButton.Font = Enum.Font.GothamBold
joinButton.TextSize = 15
joinButton.TextColor3 = Color3.fromRGB(255, 255, 255)
joinButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0) -- green for start
joinButton.Size = UDim2.new(0, 100, 0, 35)
joinButton.Position = UDim2.new(0.5, -50, 1, -45)
joinButton.Parent = mainFrame
Instance.new("UICorner", joinButton).CornerRadius = UDim.new(0, 8)

-- Loop state
local looping = false
local minimized = false

-- Minimize
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        mainFrame.Size = UDim2.new(0, 280, 0, 28)
    else
        mainFrame.Size = UDim2.new(0, 280, 0, 130)
    end
end)

-- Close
closeButton.MouseButton1Click:Connect(function()
    looping = false
    screenGui:Destroy()
end)

-- Toggle loop
joinButton.MouseButton1Click:Connect(function()
    if looping then
        looping = false
        joinButton.Text = "Start"
        joinButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0) -- green
    else
        local input = textBox.Text
        if input ~= "" then
            looping = true
            joinButton.Text = "Stop"
            joinButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0) -- red
            task.spawn(function()
                while looping do
                    local success, result = pcall(function()
                        return RequestJoin:InvokeServer(input)
                    end)
                    if success then
                        warn("Joined championship: " .. tostring(input))
                    else
                        warn("Failed: " .. tostring(result))
                    end
                    task.wait(5)
                end
            end)
        end
    end
end)
end})
local main = GUI:CreateTab("Misc", "circle-ellipsis") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Option"
})
GUI:CreateButton({
    parent = main, 
    text = "Auto CLick", 
    callback = function()
getgenv().key = "Hostile"
loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/The-telligence/main/MC%20KSystem%202"))()
end})

GUI:CreateButton({
    parent = main, 
    text = "Lds Mutate", 
    callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/yadielsantoss/full-script/refs/heads/main/MUTATE%20aws'))()
    end
})

GUI:CreateToggle({
    parent = main, 
    text = "Anti AFK", 
    default = true, 
    callback = function()
-- Anti-AFK + Auto-Relog Script
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local VirtualUser = game:GetService("VirtualUser")
local player = Players.LocalPlayer
local placeId = game.PlaceId -- current game place

-- ===== Anti-AFK =====
player.Idled:Connect(function()
    -- Simulate small user input
    VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    wait(0.1)
    VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    print("Anti-AFK triggered")
end)

-- ===== Auto-Relog on death =====
player.CharacterAdded:Connect(function(char)
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        wait(1) -- short delay before relog
        TeleportService:Teleport(placeId, player)
    end)
end)

-- ===== Auto-Relog on removal (kick/disconnect) =====
Players.PlayerRemoving:Connect(function(plr)
    if plr == player then
        wait(1)
        TeleportService:Teleport(placeId, player)
    end
end)

    end
})
GUI:CreateButton({
    parent = main, 
    text = "Use Item", 
    callback = function()
--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

--// RemoteFunction reference
local useItem = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("ItemService")
    :WaitForChild("RF")
    :WaitForChild("UseItem")

--// Items list
local items = {
    {"Cookie", "3"},
    {"Donut", "3"},
    {"Banana", "2"},
    {"Dragon Fruit", "3"},
    {"Starfruit", "3"},
    {"Raspberry", "2"},
    {"Gemstone Cereal", "1"}
}

--// GUI Setup
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "ItemGUI"
gui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", gui)
mainFrame.Size = UDim2.new(0, 320, 0, 420)
mainFrame.Position = UDim2.new(0.5, -160, 0.5, -210)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
mainFrame.Active = true
mainFrame.Draggable = true

local corner = Instance.new("UICorner", mainFrame)
corner.CornerRadius = UDim.new(0, 12)

-- Title Bar
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 35)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 55)

Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", titleBar)
title.Size = UDim2.new(1, -70, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Item Spammer"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Font = Enum.Font.GothamBold
title.TextSize = 16

-- Minimize + Close buttons
local minimizeBtn = Instance.new("TextButton", titleBar)
minimizeBtn.Size = UDim2.new(0, 30, 0, 25)
minimizeBtn.Position = UDim2.new(1, -65, 0.5, -12)
minimizeBtn.Text = "_"
minimizeBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(0, 6)

local closeBtn = Instance.new("TextButton", titleBar)
closeBtn.Size = UDim2.new(0, 30, 0, 25)
closeBtn.Position = UDim2.new(1, -35, 0.5, -12)
closeBtn.Text = "X"
closeBtn.BackgroundColor3 = Color3.fromRGB(100, 60, 60)
closeBtn.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)

-- Container for items
local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.Size = UDim2.new(1, -20, 1, -80)
contentFrame.Position = UDim2.new(0, 10, 0, 45)
contentFrame.BackgroundTransparency = 1

local scroll = Instance.new("ScrollingFrame", contentFrame)
scroll.Size = UDim2.new(1, 0, 1, -40)
scroll.CanvasSize = UDim2.new(0, 0, 0, #items * 40)
scroll.ScrollBarThickness = 6
scroll.BackgroundTransparency = 1

local layout = Instance.new("UIListLayout", scroll)
layout.Padding = UDim.new(0, 5)
layout.SortOrder = Enum.SortOrder.LayoutOrder

-- Store item widgets
local itemWidgets = {}

for _, data in ipairs(items) do
    local name, value = data[1], data[2]

    local container = Instance.new("Frame", scroll)
    container.Size = UDim2.new(1, -5, 0, 35)
    container.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    Instance.new("UICorner", container).CornerRadius = UDim.new(0, 8)

    local checkbox = Instance.new("TextButton", container)
    checkbox.Size = UDim2.new(0, 30, 1, 0)
    checkbox.Text = "☐"
    checkbox.TextScaled = true
    checkbox.BackgroundTransparency = 1
    checkbox.TextColor3 = Color3.fromRGB(200, 200, 200)

    local label = Instance.new("TextLabel", container)
    label.Size = UDim2.new(0.5, -40, 1, 0)
    label.Position = UDim2.new(0, 40, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextSize = 14

    local input = Instance.new("TextBox", container)
    input.Size = UDim2.new(0.4, -10, 0.8, 0)
    input.Position = UDim2.new(0.6, 0, 0.1, 0)
    input.PlaceholderText = "Times"
    input.Text = "25"
    input.Font = Enum.Font.Gotham
    input.TextSize = 14
    input.BackgroundColor3 = Color3.fromRGB(70, 70, 85)
    input.TextColor3 = Color3.new(1,1,1)
    Instance.new("UICorner", input).CornerRadius = UDim.new(0, 6)

    -- State
    local checked = false
    checkbox.MouseButton1Click:Connect(function()
        checked = not checked
        checkbox.Text = checked and "☑" or "☐"
    end)

    table.insert(itemWidgets, {
        name = name,
        value = value,
        input = input,
        getChecked = function() return checked end
    })
end

-- Run button
local runBtn = Instance.new("TextButton", contentFrame)
runBtn.Size = UDim2.new(1, 0, 0, 35)
runBtn.Position = UDim2.new(0, 0, 1, -35)
runBtn.Text = "Use Selected"
runBtn.Font = Enum.Font.GothamBold
runBtn.TextSize = 14
runBtn.BackgroundColor3 = Color3.fromRGB(70, 120, 70)
runBtn.TextColor3 = Color3.new(1,1,1)
Instance.new("UICorner", runBtn).CornerRadius = UDim.new(0, 8)

-- Run logic
runBtn.MouseButton1Click:Connect(function()
    for _, widget in ipairs(itemWidgets) do
        if widget.getChecked() then
            local times = tonumber(widget.input.Text) or 1
            for i = 1, times do
                useItem:InvokeServer(widget.name, widget.value)
                task.wait(0.1)
            end
        end
    end
end)

-- Minimize toggle
local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    contentFrame.Visible = not minimized
    runBtn.Visible = not minimized
end)

-- Close button
closeBtn.MouseButton1Click:Connect(function()
    gui:Destroy()
end)
end})
GUI:CreateButton({
    parent = main, 
    text = "Buy Medal", 
    callback = function()
local buyMedal = game:GetService("ReplicatedStorage")
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("MedalMerchantService")
    :WaitForChild("RF")
    :WaitForChild("Buy")

buyMedal:InvokeServer("Rune Medal")
buyMedal:InvokeServer("Firework Medal")
buyMedal:InvokeServer("Feel Good Medal")
buyMedal:InvokeServer("Easter Medal")
buyMedal:InvokeServer("Soulfire Medal")
buyMedal:InvokeServer("Godly Medal")
buyMedal:InvokeServer("Thunder Medal")
buyMedal:InvokeServer("Bulk Medal")
buyMedal:InvokeServer("Temple Medal")
buyMedal:InvokeServer("Curler 3")
buyMedal:InvokeServer("Villain Medal")
buyMedal:InvokeServer("Captain Medal")
buyMedal:InvokeServer("Beach Medal")
buyMedal:InvokeServer("Trident Medal")
buyMedal:InvokeServer("Yin Yang Medal")
buyMedal:InvokeServer("Bandit Medal")
buyMedal:InvokeServer("Holly Medal")
buyMedal:InvokeServer("Volcano Medal")
buyMedal:InvokeServer("Spooky Medal")
buyMedal:InvokeServer("Endless Grips 1")
buyMedal:InvokeServer("Hallo Medal")
buyMedal:InvokeServer("Ninja Medal")
buyMedal:InvokeServer("Snowman Medal")
buyMedal:InvokeServer("Intruder Medal")
buyMedal:InvokeServer("Criminal Medal")
buyMedal:InvokeServer("Endless Summer 1")
buyMedal:InvokeServer("Prisoner Medal")
buyMedal:InvokeServer("Twilight Medal")
buyMedal:InvokeServer("Hacker Medal")
buyMedal:InvokeServer("Noob Medal")
buyMedal:InvokeServer("Haunted Medal")
buyMedal:InvokeServer("Fire Medal")
buyMedal:InvokeServer("Athlete Medal")
buyMedal:InvokeServer("Skull Medal")
buyMedal:InvokeServer("Gripper 3")
buyMedal:InvokeServer("Boombox Medal")
buyMedal:InvokeServer("Lucky 1 Medal")
buyMedal:InvokeServer("Guard Medal")
end
})
GUI:CreateButton({
    parent = main, 
    text = "Reedem Gamepass", 
    callback = function()
	local claim = game:GetService("ReplicatedStorage")
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("SeasonPassService")
    :WaitForChild("RF")
    :WaitForChild("Claim")

claim:InvokeServer("Regular",1)
claim:InvokeServer("Regular",2)
claim:InvokeServer("Regular",3)
claim:InvokeServer("Regular",4)
claim:InvokeServer("Regular",5)
claim:InvokeServer("Regular",6)
claim:InvokeServer("Regular",7)
claim:InvokeServer("Regular",8)
claim:InvokeServer("Regular",9)
claim:InvokeServer("Regular",10)
claim:InvokeServer("Regular",11)
claim:InvokeServer("Regular",12)
claim:InvokeServer("Regular",13)
claim:InvokeServer("Regular",14)
claim:InvokeServer("Regular",15)
claim:InvokeServer("Regular",16)
claim:InvokeServer("Regular",17)
claim:InvokeServer("Regular",18)
claim:InvokeServer("Regular",19)
claim:InvokeServer("Regular",20)
claim:InvokeServer("Regular",21)
claim:InvokeServer("Regular",22)
claim:InvokeServer("Regular",23)
claim:InvokeServer("Regular",24)
claim:InvokeServer("Regular",25)
claim:InvokeServer("Regular",26)
claim:InvokeServer("Regular",27)
claim:InvokeServer("Regular",28)
claim:InvokeServer("Regular",29)
claim:InvokeServer("Regular",30)

end
})
GUI:CreateButton({
    parent = main, 
    text = "Reedem Code", 
    callback = function()
local redeem = game:GetService("ReplicatedStorage")
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("CodeRedemptionService")
    :WaitForChild("RE")
    :WaitForChild("onRedeem")

redeem:FireServer("banker")
redeem:FireServer("sorryoops")
redeem:FireServer("timetravel")
redeem:FireServer("world19")
redeem:FireServer("bulk")
redeem:FireServer("superhero")
redeem:FireServer("tokenstore")
redeem:FireServer("captain")
redeem:FireServer("skullbeard")
redeem:FireServer("pirate")
redeem:FireServer("athlete")
redeem:FireServer("tradingback")
redeem:FireServer("blossom")
redeem:FireServer("ninja")
redeem:FireServer("snowops")
redeem:FireServer("hideout")
redeem:FireServer("cosmic")
redeem:FireServer("stocking")
redeem:FireServer("frostlands")
redeem:FireServer("polar")
redeem:FireServer("shiny")
redeem:FireServer("Christmas")
redeem:FireServer("hacker")
redeem:FireServer("classic")
redeem:FireServer("clans")
redeem:FireServer("rifted")
redeem:FireServer("hauntedmanor")
redeem:FireServer("trainers")
redeem:FireServer("ghosthunting")
redeem:FireServer("spooky")
redeem:FireServer("soon")
redeem:FireServer("hatching")
redeem:FireServer("billion")
redeem:FireServer("Heavenly")
redeem:FireServer("rework")
redeem:FireServer("paradise")
redeem:FireServer("wasteland")
redeem:FireServer("apocalypse")
redeem:FireServer("energy")
redeem:FireServer("royalty")
redeem:FireServer("performance")
redeem:FireServer("charms")
redeem:FireServer("wizard")
redeem:FireServer("atlantis")
redeem:FireServer("800mvisits")
redeem:FireServer("icecold")
redeem:FireServer("forging")
redeem:FireServer("noob")
redeem:FireServer("fixingstuff")
redeem:FireServer("celebration")
redeem:FireServer("glassbridge")
redeem:FireServer("octogames")
redeem:FireServer("brainrot")
redeem:FireServer("21iscoming")
redeem:FireServer("welovemining")
redeem:FireServer("sorryfordelay")

end})

local main = GUI:CreateTab("New Event", "squircle") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Option"
})
GUI:CreateToggle({
    parent = main, 
    text = "Equip Mining", 
    default = false, 
    callback = function(duck)
if duck then
local toolService = game:GetService("ReplicatedStorage")
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("ToolService")
    :WaitForChild("RE")
    :WaitForChild("onGuiEquipRequest")

    _G.loop7 = true
	while _G.loop7 == true do
    -- Equip Dumbells
    toolService:FireServer("PlayfulMines", "Dumbells", "PlayfulMines12")
    task.wait(60) -- wait 1 minute

    -- Equip Grips
    toolService:FireServer("PlayfulMines", "Grips", "PlayfulMines12")
    task.wait(60) -- wait 1 minute
end
		else
		_G.loop7 = false
           end
        print("Toggle state:", duck)
    end
})
GUI:CreateToggle({
    parent = main, 
    text = "Equip Knuckle", 
    default = false, 
    callback = function(knuckle)
if knuckle then
        _G.knuckle1 = true
	while _G.knuckle1 == true do
task.wait()
local args = {
	"DesertMines",
	"Tier5"
}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("PunchBagService"):WaitForChild("RE"):WaitForChild("onGiveStats"):FireServer(unpack(args))
local args = {
	"DesertMines",
	"Tier5"
}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("PunchBagService"):WaitForChild("RE"):WaitForChild("onGiveStats"):FireServer(unpack(args))

 end
		else
		_G.knuckle1 = false
           end
        print("Toggle state:", knuckle)
    end
})
local main = GUI:CreateTab("misc", "cake") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Shortcut"
})
GUI:CreateToggle({
    parent = main, 
    text = "Auto Daily Login", 
    default = true, 
    callback = function(dailylogin)
if dailylogin then
        _G.dailylogin1 = true
			while _G.dailylogin1 == true do
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("DailyRewardService"):WaitForChild("RE"):WaitForChild("onClaimReward"):FireServer()
task.wait(20)
                        end
		else
		_G.dailylogin1 = false
        end
		print("Toggle state:", dailylogin)
    end
})
GUI:CreateToggle({
    parent = main, 
    text = "Auto Open Trainer", 
    default = true, 
    callback = function(trainer)
if trainer then
        _G.loop4 = true
	while _G.loop4 == true do
		task.wait(3)
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("TrainerService"):WaitForChild("RF"):WaitForChild("OpenCrate"):InvokeServer("Starter Crate")
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("TrainerService"):WaitForChild("RF"):WaitForChild("OpenCrate"):InvokeServer("Gold Crate")
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("TrainerService"):WaitForChild("RF"):WaitForChild("OpenCrate"):InvokeServer("Mythic Crate")
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("TrainerService"):WaitForChild("RF"):WaitForChild("OpenCrate"):InvokeServer("Premium Crate")
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("TrainerService"):WaitForChild("RF"):WaitForChild("OpenCrate"):InvokeServer("Prism Crate")
end
		else
		_G.loop4 = false
           end
		print("Toggle state:", trainer)
    end
})
GUI:CreateToggle({
    parent = main, 
    text = "Auto Upgrade Snack", 
    default = false, 
    callback = function(upgrade)
if upgrade then
        _G.upgrade1 = true
	while _G.upgrade1 == true do
task.wait()
local args = {{Item = "Raspberry",Tier = 1}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Cookie",Tier = 1}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Cookie",Tier = 2}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Dragon Fruit",Tier = 1}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Dragon Fruit",Tier = 2}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Donut",Tier = 1}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Donut",Tier = 2}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Starfruit",Tier = 1}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
local args = {{Item = "Starfruit",Tier = 2}}
game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("ItemCraftingService"):WaitForChild("RF"):WaitForChild("UpgradeSnack"):InvokeServer(unpack(args))
end
		else
		_G.upgrade1 = false
           end
        print("Toggle state:", upgrade)
    end
})

local main = GUI:CreateTab("misc", "egg") -- You can use IconID we didnt impleemnt lucid or any external icons
GUI:CreateSection({
    parent = main, 
    text = "Egg Hatch"
})
GUI:CreateButton({
    parent = main, 
    text = "Auto Hatch Egg", 
    callback = function()
-- 🥚 Egg Opener GUI
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

-- Knit EggService
local EggService = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("Knit"):WaitForChild("Services")
    :WaitForChild("EggService"):WaitForChild("RF")
    :WaitForChild("purchaseEgg")

-- 📌 Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "EggOpenerGui"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- 📌 Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 500, 0, 350)
MainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- 🥚 Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, -60, 1, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "🥚 Egg Opener"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.TextScaled = true
TitleLabel.Font = Enum.Font.GothamBold
TitleLabel.TextXAlignment = Enum.TextXAlignment.Center
TitleLabel.Parent = TitleBar

-- ❌ Close Button
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 30, 1, 0)
CloseBtn.Position = UDim2.new(1, -30, 0, 0)
CloseBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseBtn.Text = "X"
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.TextScaled = true
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.Parent = TitleBar
CloseBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- ➖ Minimize Button
local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 30, 1, 0)
MinBtn.Position = UDim2.new(1, -60, 0, 0)
MinBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
MinBtn.Text = "-"
MinBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
MinBtn.TextScaled = true
MinBtn.Font = Enum.Font.GothamBold
MinBtn.Parent = TitleBar

local Minimized = false
MinBtn.MouseButton1Click:Connect(function()
    Minimized = not Minimized
    if Minimized then
        for _, child in ipairs(MainFrame:GetChildren()) do
            if child ~= TitleBar then
                child.Visible = false
            end
        end
        MainFrame.Size = UDim2.new(0, 500, 0, 30)
    else
        for _, child in ipairs(MainFrame:GetChildren()) do
            if child ~= TitleBar then
                child.Visible = true
            end
        end
        MainFrame.Size = UDim2.new(0, 500, 0, 350)
    end
end)

-- 🖱 Dragging MainFrame
local dragging, dragInput, dragStart, startPos
TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- ✨ Zone Title
local ZoneTitle = Instance.new("TextLabel")
ZoneTitle.Size = UDim2.new(1, -20, 0, 40)
ZoneTitle.Position = UDim2.new(0, 10, 0, 40)
ZoneTitle.BackgroundTransparency = 1
ZoneTitle.Text = "Zone: Unknown"
ZoneTitle.TextColor3 = Color3.fromRGB(255, 215, 0) -- gold
ZoneTitle.TextScaled = true
ZoneTitle.Font = Enum.Font.GothamBold
ZoneTitle.TextXAlignment = Enum.TextXAlignment.Center
ZoneTitle.Parent = MainFrame

-- 📜 Zone & Egg Lists
local ZoneList = Instance.new("ScrollingFrame")
ZoneList.Size = UDim2.new(0.45, -10, 0.65, 0)
ZoneList.Position = UDim2.new(0, 10, 0, 90)
ZoneList.CanvasSize = UDim2.new(0,0,0,0)
ZoneList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ZoneList.ScrollBarThickness = 6
ZoneList.Parent = MainFrame

local EggList = Instance.new("ScrollingFrame")
EggList.Size = UDim2.new(0.45, -10, 0.65, 0)
EggList.Position = UDim2.new(0.55, 0, 0, 90)
EggList.CanvasSize = UDim2.new(0,0,0,0)
EggList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
EggList.ScrollBarThickness = 6
EggList.Parent = MainFrame

-- 🖼 Egg Popup
local function createEggPopup(eggName)
    local Popup = Instance.new("Frame")
    Popup.Size = UDim2.new(0, 250, 0, 150)
    Popup.Position = UDim2.new(0.5, -125, 0.5, -75)
    Popup.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Popup.BorderSizePixel = 0
    Popup.Active = true
    Popup.Draggable = false -- we'll make TitleBar draggable
    Popup.Parent = ScreenGui

    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = Popup

    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, -60, 1, 0)
    Title.Position = UDim2.new(0, 5, 0, 0)
    Title.Text = "🥚 " .. eggName
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.Font = Enum.Font.GothamBold
    Title.TextScaled = true
    Title.BackgroundTransparency = 1
    Title.Parent = TitleBar

    -- Minimize Button
    local MinBtn = Instance.new("TextButton")
    MinBtn.Size = UDim2.new(0, 30, 1, 0)
    MinBtn.Position = UDim2.new(1, -60, 0, 0)
    MinBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    MinBtn.Text = "-"
    MinBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinBtn.TextScaled = true
    MinBtn.Font = Enum.Font.GothamBold
    MinBtn.Parent = TitleBar

    -- Close Button
    local Close = Instance.new("TextButton")
    Close.Size = UDim2.new(0, 30, 1, 0)
    Close.Position = UDim2.new(1, -30, 0, 0)
    Close.Text = "X"
    Close.TextColor3 = Color3.fromRGB(255,255,255)
    Close.Font = Enum.Font.GothamBold
    Close.TextScaled = true
    Close.BackgroundColor3 = Color3.fromRGB(200,50,50)
    Close.Parent = TitleBar
    Close.MouseButton1Click:Connect(function()
        Popup:Destroy()
    end)

    -- Content Frame
    local Content = Instance.new("Frame")
    Content.Size = UDim2.new(1, 0, 1, -30)
    Content.Position = UDim2.new(0, 0, 0, 30)
    Content.BackgroundTransparency = 1
    Content.Parent = Popup

    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0.8, 0, 0.4, 0)
    Toggle.Position = UDim2.new(0.1, 0, 0.3, 0)
    Toggle.Text = "▶ Start"
    Toggle.TextColor3 = Color3.fromRGB(255,255,255)
    Toggle.TextScaled = true
    Toggle.Font = Enum.Font.GothamBold
    Toggle.BackgroundColor3 = Color3.fromRGB(50,200,50)
    Toggle.Parent = Content

    -- Toggle Hatch Loop
    local running = false
    local loop
    Toggle.MouseButton1Click:Connect(function()
        running = not running
        if running then
            Toggle.Text = "■ Stop"
            Toggle.BackgroundColor3 = Color3.fromRGB(200,50,50)
            loop = true
            task.spawn(function()
                while loop and running do
                    local args = {eggName, [5] = true, [4] = false}
                    EggService:InvokeServer(unpack(args))
                    task.wait(1)
                end
            end)
        else
            Toggle.Text = "▶ Start"
            Toggle.BackgroundColor3 = Color3.fromRGB(50,200,50)
            loop = false
        end
    end)

    -- 🖱 Dragging Popup
    local dragging, dragInput, dragStart, startPos
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Popup.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            Popup.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- ➖ Minimize logic
    local Minimized = false
    MinBtn.MouseButton1Click:Connect(function()
        Minimized = not Minimized
        Content.Visible = not Minimized
        if Minimized then
            Popup.Size = UDim2.new(0, 250, 0, 30)
        else
            Popup.Size = UDim2.new(0, 250, 0, 150)
        end
    end)
end


-- 📌 Populate GUI
local function refreshGUI()
    ZoneList:ClearAllChildren()
    EggList:ClearAllChildren()
    local y = 0
    for _, zone in ipairs(Workspace.Zones:GetChildren()) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, -5, 0, 30)
        btn.Position = UDim2.new(0,0,0,y)
        btn.BackgroundColor3 = Color3.fromRGB(60,60,60)
        btn.Text = zone.Name
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.TextScaled = true
        btn.Font = Enum.Font.Gotham
        btn.Parent = ZoneList

        btn.MouseButton1Click:Connect(function()
            ZoneTitle.Text = "Zone: "..zone.Name
            EggList:ClearAllChildren()
            local ey = 0
            local eggsFolder = zone:FindFirstChild("Interactables") and zone.Interactables:FindFirstChild("Eggs")
            if eggsFolder then
                for _, egg in ipairs(eggsFolder:GetChildren()) do
                    local ebtn = Instance.new("TextButton")
                    ebtn.Size = UDim2.new(1, -5, 0, 30)
                    ebtn.Position = UDim2.new(0,0,0,ey)
                    ebtn.BackgroundColor3 = Color3.fromRGB(70,70,70)
                    ebtn.Text = egg.Name
                    ebtn.TextColor3 = Color3.fromRGB(255,255,255)
                    ebtn.TextScaled = true
                    ebtn.Font = Enum.Font.Gotham
                    ebtn.Parent = EggList

                    ebtn.MouseButton1Click:Connect(function()
                        createEggPopup(egg.Name)
                    end)

                    ey = ey + 35
                end
                EggList.CanvasSize = UDim2.new(0,0,0,ey)
            end
        end)
        y = y + 35
    end
    ZoneList.CanvasSize = UDim2.new(0,0,0,y)
end

refreshGUI()
    end})
GUI:CreateButton({
    parent = main, 
    text = "Auto Spinner Bot", 
    callback = function()
--// Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

--// Knit Spinner Service
local SpinnerService = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Knit")
    :WaitForChild("Services"):WaitForChild("SpinnerService")

local SpinInfo = require(ReplicatedStorage.Data.SpinInfo)

--// GUI Setup
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.Active = true
MainFrame.Draggable = true

local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0, 10)

local UIStroke = Instance.new("UIStroke", MainFrame)
UIStroke.Color = Color3.fromRGB(70, 70, 70)
UIStroke.Thickness = 2

--// Title Bar
local TitleBar = Instance.new("Frame", MainFrame)
TitleBar.Size = UDim2.new(1, 0, 0, 35)
TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
local UICornerTB = Instance.new("UICorner", TitleBar)

local Title = Instance.new("TextLabel", TitleBar)
Title.Size = UDim2.new(1, -70, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "🎡 Spinner Bot"
Title.TextColor3 = Color3.fromRGB(255,255,255)
Title.TextScaled = true
Title.Font = Enum.Font.GothamBold
Title.TextXAlignment = Enum.TextXAlignment.Left

-- Close Button
local Close = Instance.new("TextButton", TitleBar)
Close.Size = UDim2.new(0, 30, 0, 30)
Close.Position = UDim2.new(1, -35, 0, 2)
Close.BackgroundColor3 = Color3.fromRGB(200,50,50)
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255,255,255)
Close.Font = Enum.Font.GothamBold
Close.TextScaled = true
local UICornerC = Instance.new("UICorner", Close)

Close.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Minimize Button
local Minimize = Instance.new("TextButton", TitleBar)
Minimize.Size = UDim2.new(0, 30, 0, 30)
Minimize.Position = UDim2.new(1, -70, 0, 2)
Minimize.BackgroundColor3 = Color3.fromRGB(100,100,100)
Minimize.Text = "-"
Minimize.TextColor3 = Color3.fromRGB(255,255,255)
Minimize.Font = Enum.Font.GothamBold
Minimize.TextScaled = true
local UICornerM = Instance.new("UICorner", Minimize)

-- Container for content
local Body = Instance.new("Frame", MainFrame)
Body.Size = UDim2.new(1, -20, 1, -45)
Body.Position = UDim2.new(0, 10, 0, 40)
Body.BackgroundTransparency = 1

--// Search Bar
local SearchBox = Instance.new("TextBox", Body)
SearchBox.Size = UDim2.new(1, 0, 0, 30)
SearchBox.PlaceholderText = "Search spinner..."
SearchBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
SearchBox.TextColor3 = Color3.fromRGB(255,255,255)
SearchBox.ClearTextOnFocus = false
SearchBox.Font = Enum.Font.Gotham
SearchBox.TextSize = 16
local UICornerS = Instance.new("UICorner", SearchBox)

-- Dropdown Frame
local DropdownFrame = Instance.new("Frame", Body)
DropdownFrame.Size = UDim2.new(1, 0, 0, 120)
DropdownFrame.Position = UDim2.new(0, 0, 0, 40)
DropdownFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
DropdownFrame.ClipsDescendants = true
local UICornerD = Instance.new("UICorner", DropdownFrame)

local DropdownList = Instance.new("UIListLayout", DropdownFrame)
DropdownList.SortOrder = Enum.SortOrder.LayoutOrder

-- Selected Frame
local SelectedFrame = Instance.new("Frame", Body)
SelectedFrame.Size = UDim2.new(1, 0, 0, 120)
SelectedFrame.Position = UDim2.new(0, 0, 0, 170)
SelectedFrame.BackgroundColor3 = Color3.fromRGB(35,35,35)
local UICornerSel = Instance.new("UICorner", SelectedFrame)

local SelectedList = Instance.new("UIListLayout", SelectedFrame)
SelectedList.SortOrder = Enum.SortOrder.LayoutOrder

-- Toggle Button
local Toggle = Instance.new("TextButton", Body)
Toggle.Size = UDim2.new(1, 0, 0, 40)
Toggle.Position = UDim2.new(0, 0, 1, -45)
Toggle.BackgroundColor3 = Color3.fromRGB(200,50,50)
Toggle.TextColor3 = Color3.fromRGB(255,255,255)
Toggle.Font = Enum.Font.GothamBold
Toggle.TextSize = 18
Toggle.Text = "STOPPED (0)"
local UICornerT = Instance.new("UICorner", Toggle)

--// Logic
local AllSpinners = {}
for name, _ in pairs(SpinInfo) do
    table.insert(AllSpinners, name)
end
table.sort(AllSpinners)

local Selected = {}
local Active = false
local loop

-- Update toggle text
local function updateToggleText()
    local count = 0
    for _ in pairs(Selected) do count += 1 end
    if Active then
        Toggle.Text = "RUNNING (" .. count .. ")"
    else
        Toggle.Text = "STOPPED (" .. count .. ")"
    end
end

-- Add selected spinner
local function addSelected(spinnerName)
    if Selected[spinnerName] then return end
    Selected[spinnerName] = true

    local Item = Instance.new("Frame", SelectedFrame)
    Item.Size = UDim2.new(1, -10, 0, 25)
    Item.BackgroundColor3 = Color3.fromRGB(50,50,50)
    local UIC = Instance.new("UICorner", Item)

    local Label = Instance.new("TextLabel", Item)
    Label.Size = UDim2.new(1, -30, 1, 0)
    Label.Position = UDim2.new(0, 5, 0, 0)
    Label.BackgroundTransparency = 1
    Label.Text = spinnerName
    Label.TextColor3 = Color3.fromRGB(255,255,255)
    Label.Font = Enum.Font.Gotham
    Label.TextSize = 14
    Label.TextXAlignment = Enum.TextXAlignment.Left

    local Remove = Instance.new("TextButton", Item)
    Remove.Size = UDim2.new(0, 25, 0, 25)
    Remove.Position = UDim2.new(1, -25, 0, 0)
    Remove.BackgroundColor3 = Color3.fromRGB(200,50,50)
    Remove.Text = "X"
    Remove.TextColor3 = Color3.fromRGB(255,255,255)
    Remove.Font = Enum.Font.GothamBold
    Remove.TextSize = 14
    local UICR = Instance.new("UICorner", Remove)

    Remove.MouseButton1Click:Connect(function()
        Selected[spinnerName] = nil
        Item:Destroy()
        updateToggleText()
    end)

    updateToggleText()
end

-- Refresh dropdown
local function refreshDropdown(filter)
    for _, child in pairs(DropdownFrame:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end

    for _, name in ipairs(AllSpinners) do
        if filter == "" or string.find(name:lower(), filter:lower()) then
            local Btn = Instance.new("TextButton", DropdownFrame)
            Btn.Size = UDim2.new(1, -10, 0, 25)
            Btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
            Btn.Text = name
            Btn.TextColor3 = Color3.fromRGB(255,255,255)
            Btn.Font = Enum.Font.Gotham
            Btn.TextSize = 14
            local UICB = Instance.new("UICorner", Btn)

            Btn.MouseButton1Click:Connect(function()
                addSelected(name)
            end)
        end
    end
end

SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
    refreshDropdown(SearchBox.Text)
end)

-- Toggle Run/Stop (fast loop)
Toggle.MouseButton1Click:Connect(function()
    Active = not Active
    if Active then
        Toggle.BackgroundColor3 = Color3.fromRGB(50,200,50)
        loop = task.spawn(function()
            while Active do
                for name, _ in pairs(Selected) do
                    local args = {name, "x25"}
                    SpinnerService.RF.Spin:InvokeServer(unpack(args))
                    task.wait(0.1) -- very fast spin loop
                end
                task.wait(0.1)
            end
        end)
    else
        Toggle.BackgroundColor3 = Color3.fromRGB(200,50,50)
        if loop then task.cancel(loop) end
    end
    updateToggleText()
end)

-- Minimize Body
local minimized = false
local normalSize = MainFrame.Size

Minimize.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        Body.Visible = false
        MainFrame.Size = UDim2.new(normalSize.X.Scale, normalSize.X.Offset, 0, 40)
    else
        Body.Visible = true
        MainFrame.Size = normalSize
    end
end)
-- Init
refreshDropdown("")
updateToggleText()
end})
GUI:CreateButton({
    parent = main, 
    text = "Auto Open Chest", 
    callback = function()
--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

--// Variables
local loopRunning = false
local SelectedChests = {}

--// GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ChestGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

-- Main Frame
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 280, 0, 320)
Frame.Position = UDim2.new(0.35, 0, 0.35, 0)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

Instance.new("UICorner", Frame)
local Stroke = Instance.new("UIStroke", Frame)
Stroke.Thickness = 2
Stroke.Color = Color3.fromRGB(80, 80, 80)

-- Title bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
TitleBar.Parent = Frame
Instance.new("UICorner", TitleBar)

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "⚒️ Chest Opener"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Minimize Button
local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 25, 0, 25)
MinBtn.Position = UDim2.new(1, -55, 0.5, -12)
MinBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.GothamBold
MinBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
MinBtn.TextSize = 18
MinBtn.Parent = TitleBar
Instance.new("UICorner", MinBtn)

-- Close Button
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 25, 0, 25)
CloseBtn.Position = UDim2.new(1, -28, 0.5, -12)
CloseBtn.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
CloseBtn.Text = "X"
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.TextSize = 16
CloseBtn.Parent = TitleBar
Instance.new("UICorner", CloseBtn)

-- Minimized Icon
local MiniIcon = Instance.new("TextButton")
MiniIcon.Size = UDim2.new(0, 100, 0, 35)
MiniIcon.Position = UDim2.new(0, 20, 0, 200)
MiniIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MiniIcon.Text = "Chest Opener"
MiniIcon.Visible = false
MiniIcon.Font = Enum.Font.GothamBold
MiniIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
MiniIcon.TextSize = 14
MiniIcon.Parent = ScreenGui
Instance.new("UICorner", MiniIcon)

-- Chest List
local ChestList = {
    "MiningVault",
    "PharoahVault",
    "IcyChest",
    "IslandChest",
    "VillainChest",
    "DragonChest",
    "SummerChest",
    "AtlantisChest",
    "KingdomChest",
    "OrcVault",
    "MonsterPresent"
}

-- Dropdown Frame
local DropFrame = Instance.new("ScrollingFrame")
DropFrame.Size = UDim2.new(0.9, 0, 0, 150)
DropFrame.Position = UDim2.new(0.05, 0, 0.15, 0)
DropFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
DropFrame.BorderSizePixel = 0
DropFrame.ScrollBarThickness = 4
DropFrame.CanvasSize = UDim2.new(0, 0, 0, #ChestList * 28)
DropFrame.Parent = Frame
Instance.new("UICorner", DropFrame)

local ListLayout = Instance.new("UIListLayout")
ListLayout.Parent = DropFrame
ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
ListLayout.Padding = UDim.new(0, 4)

-- Selected label
local SelectedLabel = Instance.new("TextLabel")
SelectedLabel.Size = UDim2.new(0.9, 0, 0, 50)
SelectedLabel.Position = UDim2.new(0.05, 0, 0.63, 0)
SelectedLabel.BackgroundTransparency = 1
SelectedLabel.Text = "Selected: None"
SelectedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SelectedLabel.Font = Enum.Font.GothamBold
SelectedLabel.TextSize = 14
SelectedLabel.TextXAlignment = Enum.TextXAlignment.Left
SelectedLabel.TextYAlignment = Enum.TextYAlignment.Top
SelectedLabel.TextWrapped = true
SelectedLabel.Parent = Frame

-- Toggle button
local Toggle = Instance.new("TextButton")
Toggle.Size = UDim2.new(0.9, 0, 0, 35)
Toggle.Position = UDim2.new(0.05, 0, 0.82, 0)
Toggle.Text = "▶ Start Loop"
Toggle.BackgroundColor3 = Color3.fromRGB(60, 100, 60)
Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
Toggle.Font = Enum.Font.GothamBold
Toggle.TextSize = 16
Toggle.Parent = Frame
Instance.new("UICorner", Toggle)

-- Remote reference
local ChestRemote = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("Knit")
    :WaitForChild("Services")
    :WaitForChild("ChestService")
    :WaitForChild("RF")
    :WaitForChild("Open")

-- Function to invoke chest
local function openChest(name)
    if name and name ~= "" then
        local success, result = pcall(function()
            return ChestRemote:InvokeServer(name)
        end)
        if success then
            print("Opened chest:", name, "Result:", result)
        else
            warn("Failed to open chest:", name)
        end
    end
end

-- Create chest buttons
for _, chest in ipairs(ChestList) do
    local Btn = Instance.new("TextButton")
    Btn.Size = UDim2.new(1, -4, 0, 24)
    Btn.Text = chest
    Btn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    Btn.Font = Enum.Font.Gotham
    Btn.TextSize = 14
    Btn.Parent = DropFrame
    Instance.new("UICorner", Btn)

    Btn.MouseButton1Click:Connect(function()
        if table.find(SelectedChests, chest) then
            table.remove(SelectedChests, table.find(SelectedChests, chest))
            Btn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
        else
            table.insert(SelectedChests, chest)
            Btn.BackgroundColor3 = Color3.fromRGB(80, 120, 80)
        end

        if #SelectedChests > 0 then
            SelectedLabel.Text = "Selected: " .. table.concat(SelectedChests, ", ")
        else
            SelectedLabel.Text = "Selected: None"
        end
    end)
end

-- Button toggle logic
Toggle.MouseButton1Click:Connect(function()
    if loopRunning then
        loopRunning = false
        Toggle.Text = "▶ Start Loop"
        Toggle.BackgroundColor3 = Color3.fromRGB(60, 100, 60)
    else
        if #SelectedChests == 0 then
            warn("⚠️ Please select at least one chest!")
            return
        end
        loopRunning = true
        Toggle.Text = "■ Stop Loop"
        Toggle.BackgroundColor3 = Color3.fromRGB(120, 40, 40)

        -- Start loop
        task.spawn(function()
            while loopRunning do
                for _, chest in ipairs(SelectedChests) do
                    openChest(chest)
                    task.wait(0.2)
                end
            end
        end)
    end
end)

-- Minimize / Restore
MinBtn.MouseButton1Click:Connect(function()
    Frame.Visible = false
    MiniIcon.Visible = true
end)

MiniIcon.MouseButton1Click:Connect(function()
    Frame.Visible = true
    MiniIcon.Visible = false
end)

-- Close GUI
CloseBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)
end})
GUI:CreateButton({
    parent = main, 
    text = "Auto Mining", 
    callback = function()
--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

--// Remotes
local mineRemote = ReplicatedStorage.Packages.Knit.Services.MiningService.RF.MineBlock
local smeltAddRemote = ReplicatedStorage.Packages.Knit.Services.OreSmeltingService.RF.AddAllOres
local smeltClaimRemote = ReplicatedStorage.Packages.Knit.Services.OreSmeltingService.RF.ClaimSmelting

-- Assets
local templateFolder = ReplicatedStorage:WaitForChild("Assets"):WaitForChild("MiningBlocks")
local miningRoot = Workspace.GameObjects.Mining

-- Settings
local LOOP_DELAY = 0.2
_G.mineUnderFeet = false
_G.masterMineAll = false
_G.autoSmelt = false
_G.returnLastSpot = false
_G.autoCheckpoint = false

-- Variables
local lastSafePos = nil
local lastCheckpoint = nil
local lastAction = tick()

--// GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MiningHelperGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

-- Main Frame
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 320)
Frame.Position = UDim2.new(0.35, 0, 0.25, 0)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui
Instance.new("UICorner", Frame)
local Stroke = Instance.new("UIStroke", Frame)
Stroke.Thickness = 2
Stroke.Color = Color3.fromRGB(80, 80, 80)

-- Title bar
local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
TitleBar.Parent = Frame
Instance.new("UICorner", TitleBar)

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "⛏ Mining Helper"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Minimize Button
local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 25, 0, 25)
MinBtn.Position = UDim2.new(1, -55, 0.5, -12)
MinBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MinBtn.Text = "-"
MinBtn.Font = Enum.Font.GothamBold
MinBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
MinBtn.TextSize = 18
MinBtn.Parent = TitleBar
Instance.new("UICorner", MinBtn)

-- Close Button
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 25, 0, 25)
CloseBtn.Position = UDim2.new(1, -28, 0.5, -12)
CloseBtn.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
CloseBtn.Text = "X"
CloseBtn.Font = Enum.Font.GothamBold
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.TextSize = 16
CloseBtn.Parent = TitleBar
Instance.new("UICorner", CloseBtn)

-- Status Label
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Size = UDim2.new(1, -10, 0, 25)
StatusLabel.Position = UDim2.new(0, 5, 1, -30)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Text = "Status: Idle"
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextSize = 14
StatusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
StatusLabel.TextXAlignment = Enum.TextXAlignment.Left
StatusLabel.Parent = Frame

-- Restore Button
local MiniIcon = Instance.new("TextButton")
MiniIcon.Size = UDim2.new(0, 120, 0, 35)
MiniIcon.Position = UDim2.new(0, 20, 0, 200)
MiniIcon.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MiniIcon.Text = "⛏ Mining Helper"
MiniIcon.Visible = false
MiniIcon.Font = Enum.Font.GothamBold
MiniIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
MiniIcon.TextSize = 14
MiniIcon.Parent = ScreenGui
Instance.new("UICorner", MiniIcon)

-- Helper: toggle style
local function setToggleState(btn, state, text)
	if state then
		btn.Text = "■ " .. text .. " (ON)"
		btn.BackgroundColor3 = Color3.fromRGB(60, 100, 60)
	else
		btn.Text = "▶ " .. text .. " (OFF)"
		btn.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
	end
end

local function createToggle(yPos, text, toggleVarName)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.9, 0, 0, 35)
	btn.Position = UDim2.new(0.05, 0, 0, yPos)
	btn.BackgroundColor3 = Color3.fromRGB(120, 40, 40)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.Text = "▶ " .. text .. " (OFF)"
	btn.Parent = Frame
	Instance.new("UICorner", btn)

	btn.MouseButton1Click:Connect(function()
		_G[toggleVarName] = not _G[toggleVarName]
		setToggleState(btn, _G[toggleVarName], text)
	end)

	return btn
end

-- 5 Toggles
createToggle(40,  "Mine Under Feet",   "mineUnderFeet")
createToggle(80,  "Mine Ores + Specials", "masterMineAll")
createToggle(120, "Auto Smelt Ores",   "autoSmelt")
createToggle(160, "Return Last Spot",  "returnLastSpot")
createToggle(200, "Auto Checkpoint",   "autoCheckpoint")

--// Functions
local function markAction()
	lastAction = tick()
end

-- Save safe pos
task.spawn(function()
	while task.wait(1) do
		local char = player.Character
		local hrp = char and char:FindFirstChild("HumanoidRootPart")
		if hrp and hrp.Position.Y > 0 then
			lastSafePos = hrp.Position
		end
	end
end)

-- Auto checkpoint
task.spawn(function()
	while task.wait(20) do
		if _G.autoCheckpoint then
			local char = player.Character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then
				lastCheckpoint = hrp.Position
				StatusLabel.Text = "Status: Saved Checkpoint"
			end
		end
	end
end)

-- Mine under feet
task.spawn(function()
	while task.wait(0.05) do
		if _G.mineUnderFeet then
			local char = player.Character
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if hrp then
				local ray = Ray.new(hrp.Position, Vector3.new(0, -10, 0))
				local part = Workspace:FindPartOnRay(ray, char)
				if part and part.Parent and part.Parent:IsA("Model") and part.Parent.PrimaryPart then
					pcall(function()
						mineRemote:InvokeServer(part.Parent)
					end)
					markAction()
					StatusLabel.Text = "Status: Mining Under Feet..."
				end
			end
		end
	end
end)

-- Main mining & smelting loop
task.spawn(function()
	while task.wait(LOOP_DELAY) do
		local didSomething = false
		character = player.Character or player.CharacterAdded:Wait()
		humanoidRootPart = character:WaitForChild("HumanoidRootPart")

		-- Mine all ores & specials
		for _, zone in ipairs(miningRoot:GetChildren()) do
			if zone:FindFirstChild("Blocks") then
				for _, block in ipairs(zone.Blocks:GetChildren()) do
					if block:IsA("Model") and block.PrimaryPart then
						if _G.masterMineAll and (
							string.find(block.Name, "Ore")
							or string.find(block.Name, "Mega")
							or string.find(block.Name, "Giga")
							or string.find(block.Name, "Medal")
							or string.find(block.Name, "Potion")
							or string.find(block.Name, "Mining")
						) then
							pcall(function()
								mineRemote:InvokeServer(block)
							end)
							markAction()
							StatusLabel.Text = "Status: Mining " .. block.Name .. "..."
							didSomething = true
						end
					end
				end
			end
		end

		-- Auto smelt
		if _G.autoSmelt then
			for _, block in ipairs(templateFolder:GetChildren()) do
				if string.find(block.Name, "Ore") then
					pcall(function()
						smeltAddRemote:InvokeServer(block.Name, 1)
					end)
				end
			end
			pcall(function()
				smeltClaimRemote:InvokeServer()
			end)
			markAction()
			StatusLabel.Text = "Status: Smelting Ores..."
			didSomething = true
		end

		-- Idle
		if not didSomething and not _G.mineUnderFeet then
			StatusLabel.Text = "Status: Idle"
		end
	end
end)

-- Idle return
task.spawn(function()
	while task.wait(1) do
		if _G.returnLastSpot and lastSafePos then
			if (tick() - lastAction) > 3 then
				local char = player.Character
				local hrp = char and char:FindFirstChild("HumanoidRootPart")
				if hrp then
					hrp.CFrame = CFrame.new(lastSafePos + Vector3.new(0, 5, 0))
					StatusLabel.Text = "Status: Auto-Returned (Idle)"
					markAction()
				end
			end
		end
	end
end)

-- Minimize / Restore
MinBtn.MouseButton1Click:Connect(function()
	Frame.Visible = false
	MiniIcon.Visible = true
end)

MiniIcon.MouseButton1Click:Connect(function()
	Frame.Visible = true
	MiniIcon.Visible = false
end)

-- Close GUI
CloseBtn.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
end)
end})
